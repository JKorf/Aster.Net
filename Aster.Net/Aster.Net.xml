<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Aster.Net</name>
    </assembly>
    <members>
        <member name="T:Aster.Net.AsterEnvironment">
            <summary>
            Aster environments
            </summary>
        </member>
        <member name="P:Aster.Net.AsterEnvironment.FuturesRestClientAddress">
            <summary>
            Futures Rest API address
            </summary>
        </member>
        <member name="P:Aster.Net.AsterEnvironment.FuturesSocketClientAddress">
            <summary>
            Futures Socket API address
            </summary>
        </member>
        <member name="P:Aster.Net.AsterEnvironment.SpotRestClientAddress">
            <summary>
            Spot Rest API address
            </summary>
        </member>
        <member name="P:Aster.Net.AsterEnvironment.SpotSocketClientAddress">
            <summary>
            Spot Socket API address
            </summary>
        </member>
        <member name="M:Aster.Net.AsterEnvironment.#ctor">
            <summary>
            ctor for DI, use <see cref="M:Aster.Net.AsterEnvironment.CreateCustom(System.String,System.String,System.String,System.String,System.String)"/> for creating a custom environment
            </summary>
        </member>
        <member name="M:Aster.Net.AsterEnvironment.GetEnvironmentByName(System.String)">
            <summary>
            Get the Aster environment by name
            </summary>
        </member>
        <member name="P:Aster.Net.AsterEnvironment.All">
            <summary>
            Available environment names
            </summary>
            <returns></returns>
        </member>
        <member name="P:Aster.Net.AsterEnvironment.Live">
            <summary>
            Live environment
            </summary>
        </member>
        <member name="M:Aster.Net.AsterEnvironment.CreateCustom(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Create a custom environment
            </summary>
        </member>
        <member name="T:Aster.Net.AsterExchange">
            <summary>
            Aster exchange information and configuration
            </summary>
        </member>
        <member name="P:Aster.Net.AsterExchange.ExchangeName">
            <summary>
            Exchange name
            </summary>
        </member>
        <member name="P:Aster.Net.AsterExchange.DisplayName">
            <summary>
            Display name
            </summary>
        </member>
        <member name="P:Aster.Net.AsterExchange.ImageUrl">
            <summary>
            Url to exchange image
            </summary>
        </member>
        <member name="P:Aster.Net.AsterExchange.Url">
            <summary>
            Url to the main website
            </summary>
        </member>
        <member name="P:Aster.Net.AsterExchange.ApiDocsUrl">
            <summary>
            Urls to the API documentation
            </summary>
        </member>
        <member name="P:Aster.Net.AsterExchange.Type">
            <summary>
            Type of exchange
            </summary>
        </member>
        <member name="M:Aster.Net.AsterExchange.FormatSymbol(System.String,System.String,CryptoExchange.Net.SharedApis.TradingMode,System.Nullable{System.DateTime})">
            <summary>
            Format a base and quote asset to an Aster recognized symbol 
            </summary>
            <param name="baseAsset">Base asset</param>
            <param name="quoteAsset">Quote asset</param>
            <param name="tradingMode">Trading mode</param>
            <param name="deliverTime">Delivery time for delivery futures</param>
            <returns></returns>
        </member>
        <member name="P:Aster.Net.AsterExchange.RateLimiter">
            <summary>
            Rate limiter configuration for the Aster API
            </summary>
        </member>
        <member name="T:Aster.Net.AsterRateLimiters">
            <summary>
            Rate limiter configuration for the Aster API
            </summary>
        </member>
        <member name="E:Aster.Net.AsterRateLimiters.RateLimitTriggered">
            <summary>
            Event for when a rate limit is triggered
            </summary>
        </member>
        <member name="E:Aster.Net.AsterRateLimiters.RateLimitUpdated">
            <summary>
            Event when the rate limit is updated. Note that it's only updated when a request is send, so there are no specific updates when the current usage is decaying.
            </summary>
        </member>
        <member name="T:Aster.Net.AsterTrackerFactory">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.AsterTrackerFactory.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:Aster.Net.AsterTrackerFactory.#ctor(System.IServiceProvider)">
            <summary>
            ctor
            </summary>
            <param name="serviceProvider">Service provider for resolving logging and clients</param>
        </member>
        <member name="M:Aster.Net.AsterTrackerFactory.CanCreateKlineTracker(CryptoExchange.Net.SharedApis.SharedSymbol,CryptoExchange.Net.SharedApis.SharedKlineInterval)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.AsterTrackerFactory.CanCreateTradeTracker(CryptoExchange.Net.SharedApis.SharedSymbol)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.AsterTrackerFactory.CreateKlineTracker(CryptoExchange.Net.SharedApis.SharedSymbol,CryptoExchange.Net.SharedApis.SharedKlineInterval,System.Nullable{System.Int32},System.Nullable{System.TimeSpan})">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.AsterTrackerFactory.CreateTradeTracker(CryptoExchange.Net.SharedApis.SharedSymbol,System.Nullable{System.Int32},System.Nullable{System.TimeSpan})">
            <inheritdoc />
        </member>
        <member name="T:Aster.Net.Clients.AsterRestClient">
            <inheritdoc cref="T:Aster.Net.Interfaces.Clients.IAsterRestClient" />
        </member>
        <member name="P:Aster.Net.Clients.AsterRestClient.SpotApi">
            <inheritdoc />
        </member>
        <member name="P:Aster.Net.Clients.AsterRestClient.FuturesApi">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.AsterRestClient.#ctor(System.Action{Aster.Net.Objects.Options.AsterRestOptions})">
            <summary>
            Create a new instance of the AsterRestClient using provided options
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:Aster.Net.Clients.AsterRestClient.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Options.IOptions{Aster.Net.Objects.Options.AsterRestOptions})">
            <summary>
            Create a new instance of the AsterRestClient using provided options
            </summary>
            <param name="options">Option configuration</param>
            <param name="loggerFactory">The logger factory</param>
            <param name="httpClient">Http client for this client</param>
        </member>
        <member name="M:Aster.Net.Clients.AsterRestClient.SetOptions(CryptoExchange.Net.Objects.Options.UpdateOptions)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.AsterRestClient.SetDefaultOptions(System.Action{Aster.Net.Objects.Options.AsterRestOptions})">
            <summary>
            Set the default options to be used when creating new clients
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:Aster.Net.Clients.AsterRestClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="T:Aster.Net.Clients.AsterSocketClient">
            <inheritdoc cref="T:Aster.Net.Interfaces.Clients.IAsterSocketClient" />
        </member>
        <member name="P:Aster.Net.Clients.AsterSocketClient.FuturesApi">
            <inheritdoc />
        </member>
        <member name="P:Aster.Net.Clients.AsterSocketClient.SpotApi">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.AsterSocketClient.#ctor(System.Action{Aster.Net.Objects.Options.AsterSocketOptions})">
            <summary>
            Create a new instance of AsterSocketClient
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:Aster.Net.Clients.AsterSocketClient.#ctor(Microsoft.Extensions.Options.IOptions{Aster.Net.Objects.Options.AsterSocketOptions},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Create a new instance of AsterSocketClient
            </summary>
            <param name="loggerFactory">The logger factory</param>
            <param name="options">Option configuration</param>
        </member>
        <member name="M:Aster.Net.Clients.AsterSocketClient.SetOptions(CryptoExchange.Net.Objects.Options.UpdateOptions)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.AsterSocketClient.SetDefaultOptions(System.Action{Aster.Net.Objects.Options.AsterSocketOptions})">
            <summary>
            Set the default options to be used when creating new clients
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:Aster.Net.Clients.AsterSocketClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="T:Aster.Net.Clients.AsterUserClientProvider">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.AsterUserClientProvider.#ctor(System.Action{Aster.Net.Objects.Options.AsterOptions})">
            <summary>
            ctor
            </summary>
            <param name="optionsDelegate">Options to use for created clients</param>
        </member>
        <member name="M:Aster.Net.Clients.AsterUserClientProvider.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Options.IOptions{Aster.Net.Objects.Options.AsterRestOptions},Microsoft.Extensions.Options.IOptions{Aster.Net.Objects.Options.AsterSocketOptions})">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:Aster.Net.Clients.AsterUserClientProvider.InitializeUserClient(System.String,CryptoExchange.Net.Authentication.ApiCredentials,Aster.Net.AsterEnvironment)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.AsterUserClientProvider.ClearUserClients(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.AsterUserClientProvider.GetRestClient(System.String,CryptoExchange.Net.Authentication.ApiCredentials,Aster.Net.AsterEnvironment)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.AsterUserClientProvider.GetSocketClient(System.String,CryptoExchange.Net.Authentication.ApiCredentials,Aster.Net.AsterEnvironment)">
            <inheritdoc />
        </member>
        <member name="T:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApi">
            <inheritdoc cref="T:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApi" />
        </member>
        <member name="P:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApi.Account">
            <inheritdoc />
        </member>
        <member name="P:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApi.ExchangeData">
            <inheritdoc />
        </member>
        <member name="P:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApi.Trading">
            <inheritdoc />
        </member>
        <member name="P:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApi.ExchangeName">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApi.CreateAccessor">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApi.CreateSerializer">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApi.ParseErrorResponse(System.Int32,System.Collections.Generic.KeyValuePair{System.String,System.String[]}[],CryptoExchange.Net.Interfaces.IMessageAccessor,System.Exception)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApi.GetServerTimestampAsync">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApi.GetTimeSyncInfo">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApi.GetTimeOffset">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApi.FormatSymbol(System.String,System.String,CryptoExchange.Net.SharedApis.TradingMode,System.Nullable{System.DateTime})">
            <inheritdoc />
        </member>
        <member name="P:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApi.SharedClient">
            <inheritdoc />
        </member>
        <member name="T:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiAccount">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiAccount.SetPositionModeAsync(System.Boolean,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiAccount.GetPositionModeAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiAccount.SetMultiAssetModeAsync(System.Boolean,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiAccount.GetMultiAssetModeAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiAccount.TransferAsync(System.String,Aster.Net.Enums.TransferDirection,System.Decimal,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiAccount.GetBalancesAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiAccount.GetAccountInfoAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiAccount.SetLeverageAsync(System.String,System.Int32,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiAccount.SetMarginTypeAsync(System.String,Aster.Net.Enums.MarginType,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiAccount.ModifyIsolatedMarginAsync(System.String,Aster.Net.Enums.MarginAdjustSide,System.Decimal,System.Nullable{Aster.Net.Enums.PositionSide},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiAccount.GetPositionMarginChangeHistoryAsync(System.String,System.Nullable{Aster.Net.Enums.MarginAdjustSide},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiAccount.GetIncomeHistoryAsync(System.String,System.Nullable{Aster.Net.Enums.IncomeType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiAccount.GetLeverageBracketsAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiAccount.GetPositionAdlQuantileEstimationAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiAccount.GetUserCommissionRateAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiAccount.StartUserStreamAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiAccount.KeepAliveUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiAccount.StopUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiExchangeData">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiExchangeData.GetExchangeInfoAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiExchangeData.GetOrderBookAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiExchangeData.GetRecentTradesAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiExchangeData.GetTradeHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiExchangeData.GetAggregatedTradeHistoryAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiExchangeData.GetKlinesAsync(System.String,Aster.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiExchangeData.GetIndexPriceKlinesAsync(System.String,Aster.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiExchangeData.GetMarkPriceKlinesAsync(System.String,Aster.Net.Enums.KlineInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiExchangeData.GetMarkPriceAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiExchangeData.GetMarkPricesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiExchangeData.GetFundingRatesAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiExchangeData.GetFundingInfoAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiExchangeData.GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiExchangeData.GetTickersAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiExchangeData.GetPriceAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiExchangeData.GetPricesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiExchangeData.GetBookTickerAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiExchangeData.GetBookTickersAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiTrading">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiTrading.PlaceOrderAsync(System.String,Aster.Net.Enums.OrderSide,Aster.Net.Enums.OrderType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Aster.Net.Enums.PositionSide},System.Nullable{Aster.Net.Enums.TimeInForce},System.Nullable{System.Boolean},System.String,System.Nullable{System.Decimal},System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Aster.Net.Enums.WorkingType},System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiTrading.PlaceMultipleOrdersAsync(System.Collections.Generic.IEnumerable{Aster.Net.Objects.Models.AsterOrderRequest},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiTrading.GetOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiTrading.CancelOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiTrading.CancelAllOrdersAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiTrading.CancelMultipleOrdersAsync(System.String,System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiTrading.CancelAllOrdersAfterTimeoutAsync(System.String,System.TimeSpan,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiTrading.GetOpenOrdersAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiTrading.GetOrdersAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiTrading.GetPositionsAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiTrading.GetUserTradesAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterRestClientFuturesApiTrading.GetForcedOrdersAsync(System.String,System.Nullable{Aster.Net.Enums.AutoCloseType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Aster.Net.Clients.FuturesApi.AsterSocketClientFuturesApi">
            <summary>
            Client providing access to the Aster Futures websocket Api
            </summary>
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterSocketClientFuturesApi.#ctor(Microsoft.Extensions.Logging.ILogger,Aster.Net.Objects.Options.AsterSocketOptions)">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterSocketClientFuturesApi.CreateAccessor(System.Net.WebSockets.WebSocketMessageType)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterSocketClientFuturesApi.CreateSerializer">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterSocketClientFuturesApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterSocketClientFuturesApi.SubscribeToAggregatedTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterAggregatedTradeUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterSocketClientFuturesApi.SubscribeToAggregatedTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterAggregatedTradeUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterSocketClientFuturesApi.SubscribeToMarkPriceUpdatesAsync(System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterMarkPriceUpdate[]}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterSocketClientFuturesApi.SubscribeToMarkPriceUpdatesAsync(System.String,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterMarkPriceUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterSocketClientFuturesApi.SubscribeToMarkPriceUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterMarkPriceUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterSocketClientFuturesApi.SubscribeToKlineUpdatesAsync(System.String,Aster.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterKlineUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterSocketClientFuturesApi.SubscribeToKlineUpdatesAsync(System.String,System.Collections.Generic.IEnumerable{Aster.Net.Enums.KlineInterval},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterKlineUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterSocketClientFuturesApi.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},Aster.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterKlineUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterSocketClientFuturesApi.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Aster.Net.Enums.KlineInterval},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterKlineUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterSocketClientFuturesApi.SubscribeToMiniTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterMiniTickUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterSocketClientFuturesApi.SubscribeToMiniTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterMiniTickUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterSocketClientFuturesApi.SubscribeToMiniTickerUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterMiniTickUpdate[]}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterSocketClientFuturesApi.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterSocketClientFuturesApi.SubscribeToTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterSocketClientFuturesApi.SubscribeToTickerUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterTickerUpdate[]}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterSocketClientFuturesApi.SubscribeToBookTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterBookTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterSocketClientFuturesApi.SubscribeToBookTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterBookTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterSocketClientFuturesApi.SubscribeToBookTickerUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterBookTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterSocketClientFuturesApi.SubscribeToLiquidationUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterLiquidationUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterSocketClientFuturesApi.SubscribeToLiquidationUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterLiquidationUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterSocketClientFuturesApi.SubscribeToLiquidationUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterLiquidationUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterSocketClientFuturesApi.SubscribeToPartialOrderBookUpdatesAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterOrderBookUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterSocketClientFuturesApi.SubscribeToPartialOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterOrderBookUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterSocketClientFuturesApi.SubscribeToOrderBookUpdatesAsync(System.String,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterOrderBookUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterSocketClientFuturesApi.SubscribeToOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterOrderBookUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterSocketClientFuturesApi.SubscribeToUserDataUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterConfigUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterMarginUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterAccountUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterOrderUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterSocketEvent}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterSocketClientFuturesApi.GetListenerIdentifier(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterSocketClientFuturesApi.GetAuthenticationRequestAsync(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="P:Aster.Net.Clients.FuturesApi.AsterSocketClientFuturesApi.SharedClient">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.FuturesApi.AsterSocketClientFuturesApi.FormatSymbol(System.String,System.String,CryptoExchange.Net.SharedApis.TradingMode,System.Nullable{System.DateTime})">
            <inheritdoc />
        </member>
        <member name="T:Aster.Net.Clients.SpotApi.AsterRestClientSpotApi">
            <inheritdoc cref="T:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApi" />
        </member>
        <member name="P:Aster.Net.Clients.SpotApi.AsterRestClientSpotApi.Account">
            <inheritdoc />
        </member>
        <member name="P:Aster.Net.Clients.SpotApi.AsterRestClientSpotApi.ExchangeData">
            <inheritdoc />
        </member>
        <member name="P:Aster.Net.Clients.SpotApi.AsterRestClientSpotApi.Trading">
            <inheritdoc />
        </member>
        <member name="P:Aster.Net.Clients.SpotApi.AsterRestClientSpotApi.ExchangeName">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterRestClientSpotApi.CreateAccessor">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterRestClientSpotApi.CreateSerializer">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterRestClientSpotApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterRestClientSpotApi.ParseErrorResponse(System.Int32,System.Collections.Generic.KeyValuePair{System.String,System.String[]}[],CryptoExchange.Net.Interfaces.IMessageAccessor,System.Exception)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterRestClientSpotApi.GetServerTimestampAsync">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterRestClientSpotApi.GetTimeSyncInfo">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterRestClientSpotApi.GetTimeOffset">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterRestClientSpotApi.FormatSymbol(System.String,System.String,CryptoExchange.Net.SharedApis.TradingMode,System.Nullable{System.DateTime})">
            <inheritdoc />
        </member>
        <member name="P:Aster.Net.Clients.SpotApi.AsterRestClientSpotApi.SharedClient">
            <inheritdoc />
        </member>
        <member name="T:Aster.Net.Clients.SpotApi.AsterRestClientSpotApiAccount">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterRestClientSpotApiAccount.GetUserCommissionRateAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterRestClientSpotApiAccount.TransferAsync(System.String,Aster.Net.Enums.TransferDirection,System.Decimal,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterRestClientSpotApiAccount.SendToAddressAsync(System.String,System.String,System.Decimal,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterRestClientSpotApiAccount.GetWithdrawFeeAsync(System.String,Aster.Net.Enums.NetworkType,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterRestClientSpotApiAccount.GetAccountInfoAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterRestClientSpotApiAccount.StartUserStreamAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterRestClientSpotApiAccount.KeepAliveUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterRestClientSpotApiAccount.StopUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Aster.Net.Clients.SpotApi.AsterRestClientSpotApiExchangeData">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterRestClientSpotApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterRestClientSpotApiExchangeData.GetExchangeInfoAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterRestClientSpotApiExchangeData.GetOrderBookAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterRestClientSpotApiExchangeData.GetRecentTradesAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterRestClientSpotApiExchangeData.GetTradeHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterRestClientSpotApiExchangeData.GetAggregatedTradeHistoryAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterRestClientSpotApiExchangeData.GetKlinesAsync(System.String,Aster.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterRestClientSpotApiExchangeData.GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterRestClientSpotApiExchangeData.GetTickersAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterRestClientSpotApiExchangeData.GetPriceAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterRestClientSpotApiExchangeData.GetPricesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterRestClientSpotApiExchangeData.GetBookTickerAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterRestClientSpotApiExchangeData.GetBookTickersAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Aster.Net.Clients.SpotApi.AsterRestClientSpotApiTrading">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterRestClientSpotApiTrading.PlaceOrderAsync(System.String,Aster.Net.Enums.OrderSide,Aster.Net.Enums.OrderType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{Aster.Net.Enums.TimeInForce},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterRestClientSpotApiTrading.CancelOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterRestClientSpotApiTrading.GetOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterRestClientSpotApiTrading.GetOpenOrdersAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterRestClientSpotApiTrading.CancelAllOrdersAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterRestClientSpotApiTrading.GetOrdersAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterRestClientSpotApiTrading.GetUserTradesAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Aster.Net.Clients.SpotApi.AsterSocketClientSpotApi">
            <summary>
            Client providing access to the Aster Spot websocket Api
            </summary>
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterSocketClientSpotApi.#ctor(Microsoft.Extensions.Logging.ILogger,Aster.Net.Objects.Options.AsterSocketOptions)">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterSocketClientSpotApi.CreateAccessor(System.Net.WebSockets.WebSocketMessageType)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterSocketClientSpotApi.CreateSerializer">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterSocketClientSpotApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterSocketClientSpotApi.SubscribeToAggregatedTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterAggregatedTradeUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterSocketClientSpotApi.SubscribeToAggregatedTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterAggregatedTradeUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterSocketClientSpotApi.SubscribeToKlineUpdatesAsync(System.String,Aster.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterKlineUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterSocketClientSpotApi.SubscribeToKlineUpdatesAsync(System.String,System.Collections.Generic.IEnumerable{Aster.Net.Enums.KlineInterval},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterKlineUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterSocketClientSpotApi.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},Aster.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterKlineUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterSocketClientSpotApi.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Aster.Net.Enums.KlineInterval},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterKlineUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterSocketClientSpotApi.SubscribeToMiniTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterMiniTickUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterSocketClientSpotApi.SubscribeToMiniTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterMiniTickUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterSocketClientSpotApi.SubscribeToMiniTickerUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterMiniTickUpdate[]}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterSocketClientSpotApi.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterSocketClientSpotApi.SubscribeToTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterSocketClientSpotApi.SubscribeToTickerUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterTickerUpdate[]}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterSocketClientSpotApi.SubscribeToBookTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterBookTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterSocketClientSpotApi.SubscribeToBookTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterBookTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterSocketClientSpotApi.SubscribeToBookTickerUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterBookTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterSocketClientSpotApi.SubscribeToPartialOrderBookUpdatesAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterOrderBookUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterSocketClientSpotApi.SubscribeToPartialOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterOrderBookUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterSocketClientSpotApi.SubscribeToOrderBookUpdatesAsync(System.String,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterOrderBookUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterSocketClientSpotApi.SubscribeToOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterOrderBookUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterSocketClientSpotApi.SubscribeToUserDataUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterSpotAccountUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterSpotOrderUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterSocketClientSpotApi.GetListenerIdentifier(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterSocketClientSpotApi.GetAuthenticationRequestAsync(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="P:Aster.Net.Clients.SpotApi.AsterSocketClientSpotApi.SharedClient">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Clients.SpotApi.AsterSocketClientSpotApi.FormatSymbol(System.String,System.String,CryptoExchange.Net.SharedApis.TradingMode,System.Nullable{System.DateTime})">
            <inheritdoc />
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.Boolean">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.NullableBoolean">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.Decimal">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.NullableDecimal">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AccountUpdateReason">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.ContractType">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.NullableContractType">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.ExecutionType">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.IncomeType">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.KlineInterval">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.MarginAdjustSide">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.MarginType">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.NullableMarginType">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.OrderSide">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.OrderStatus">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.OrderType">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.OrderTypeArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.PositionSide">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.RateLimitInterval">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.RateLimitType">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.SymbolFilterType">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.SymbolStatus">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.TimeInForce">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.TimeInForceArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.UnderlyingType">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.WorkingType">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterSymbolFilter">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterSymbolFilterArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterCombinedStreamAsterAccountUpdate">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterCombinedStreamAsterAggregatedTradeUpdate">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterCombinedStreamAsterBookTickerUpdate">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterCombinedStreamAsterConfigUpdate">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterCombinedStreamAsterKlineUpdate">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterCombinedStreamAsterLiquidationUpdateEvent">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterCombinedStreamAsterMarginUpdate">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterCombinedStreamAsterMarkPriceUpdateArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterCombinedStreamAsterMarkPriceUpdate">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterCombinedStreamAsterMiniTickUpdateArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterCombinedStreamAsterMiniTickUpdate">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterCombinedStreamAsterOrderBookUpdate">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterCombinedStreamAsterOrderUpdate">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterCombinedStreamAsterSocketEvent">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterCombinedStreamAsterSpotAccountUpdate">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterCombinedStreamAsterSpotOrderUpdate">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterCombinedStreamAsterTickerUpdateArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterCombinedStreamAsterTickerUpdate">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterListenKey">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterResult">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AssetLeverageBracket">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AssetLeverageBracketArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterAccountInfo">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterAccountInfoAsset">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterAccountInfoAssetArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterAccountUpdate">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterAccountUpdateData">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterAdlQuantile">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterAggregatedTradeUpdate">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterAggregateTrade">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterAggregateTradeArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterAsset">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterAssetArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterBalance">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterBalanceArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterBalanceUpdate">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterBalanceUpdateArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterBookTicker">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterBookTickerArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterBookTickerUpdate">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterConfigUpdate">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterConfigUpdateData">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterCountDownResult">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterExchangeInfo">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterFundingInfo">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterFundingInfoArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterFundingRateHistory">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterFundingRateHistoryArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterIncome">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterIncomeArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterKline">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterKlineArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterKlineUpdate">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterKlineUpdateData">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterLeverage">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterLeverageUpdateData">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterLiquidationUpdate">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterLiquidationUpdateEvent">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterMarginChange">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterMarginChangeArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterMarginPosition">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterMarginPositionArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterMarginUpdate">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterMarkPrice">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterMarkPriceArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterMarkPriceUpdate">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterMarkPriceUpdateArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterMiniTickUpdate">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterMiniTickUpdateArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterMultiAssetMode">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterOrder">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterOrderArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterOrderBook">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterOrderBookEntry">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterOrderBookEntryArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterOrderBookUpdate">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterOrderResult">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterOrderResultArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterOrderUpdate">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterOrderUpdateData">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterPosition">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterPositionArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterPositionMode">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterPositionUpdate">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterPositionUpdateArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterPrice">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterPriceArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterQuantileEstimation">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterQuantileEstimationArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterRateLimit">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterRateLimitArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterRecentTrade">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterRecentTradeArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterServerTime">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterSocketEvent">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterSpotAccountInfo">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterSpotAccountUpdate">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterSpotAsset">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterSpotAssetArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterSpotBalance">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterSpotBalanceArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterSpotBalanceUpdate">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterSpotBalanceUpdateArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterSpotExchangeInfo">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterSpotOrder">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterSpotOrderArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterSpotOrderUpdate">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterSpotRecentTrade">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterSpotRecentTradeArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterSpotSymbol">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterSpotSymbolArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterSpotTicker">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterSpotTickerArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterSpotUserTrade">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterSpotUserTradeArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterSymbol">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterSymbolArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterSymbolBracket">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterSymbolBracketArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterTicker">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterTickerArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterTickerUpdate">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterTickerUpdateArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterTransferResult">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterUserCommission">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterUserTrade">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterUserTradeArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterWithdrawFee">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterSocketQueryResponse">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.AsterSocketRequest">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.DictionaryStringObject">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.ListDictionaryStringObject">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.DateTime">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.NullableDateTime">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.Int32">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.NullableInt32">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.Int64">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.NullableInt64">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.Object">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.ObjectArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.String">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.StringArray">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.Default">
            <summary>
            The default <see cref="T:System.Text.Json.Serialization.JsonSerializerContext"/> associated with a default <see cref="T:System.Text.Json.JsonSerializerOptions"/> instance.
            </summary>
        </member>
        <member name="P:Aster.Net.Converters.AsterSourceGenerationContext.GeneratedSerializerOptions">
            <summary>
            The source-generated options associated with this context.
            </summary>
        </member>
        <member name="M:Aster.Net.Converters.AsterSourceGenerationContext.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:Aster.Net.Converters.AsterSourceGenerationContext.#ctor(System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Aster.Net.Converters.AsterSourceGenerationContext.GetTypeInfo(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:Aster.Net.Enums.AccountUpdateReason">
            <summary>
            Account update reason
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.AccountUpdateReason.Deposit">
            <summary>
            Deposit
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.AccountUpdateReason.Withdraw">
            <summary>
            Withdraw
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.AccountUpdateReason.Order">
            <summary>
            Order
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.AccountUpdateReason.FundingFee">
            <summary>
            Funding fee
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.AccountUpdateReason.WithdrawReject">
            <summary>
            Withdraw reject
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.AccountUpdateReason.Adjustment">
            <summary>
            Adjustment
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.AccountUpdateReason.InsuranceClear">
            <summary>
            Insurance clear
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.AccountUpdateReason.AdminDeposit">
            <summary>
            Admin deposit
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.AccountUpdateReason.AdminWithdraw">
            <summary>
            Admin withdraw
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.AccountUpdateReason.MarginTransfer">
            <summary>
            Margin transfer
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.AccountUpdateReason.MarginTypeChange">
            <summary>
            Margin type change
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.AccountUpdateReason.AssetTransfer">
            <summary>
            Asset transfer
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.AccountUpdateReason.OptionsPremiumFee">
            <summary>
            Options premium fee
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.AccountUpdateReason.OptionsSettleProfit">
            <summary>
            Options settle profit
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.AccountUpdateReason.AutoExchange">
            <summary>
            Auto exchange
            </summary>
        </member>
        <member name="T:Aster.Net.Enums.AutoCloseType">
            <summary>
            Auto close type
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.AutoCloseType.Liquidation">
            <summary>
            Liquidation order
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.AutoCloseType.Adl">
            <summary>
            Auto deleverage order
            </summary>
        </member>
        <member name="T:Aster.Net.Enums.ContractType">
            <summary>
            Type of contract
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.ContractType.Perpetual">
            <summary>
            Perpetual
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.ContractType.PerpetualDelivering">
            <summary>
            Perpetual delivering
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.ContractType.CurrentMonth">
            <summary>
            Current month
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.ContractType.CurrentQuarter">
            <summary>
            Current quarter
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.ContractType.CurrentQuarterDelivering">
            <summary>
            Current quarter delivering
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.ContractType.NextQuarter">
            <summary>
            Next quarter
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.ContractType.NextQuarterDelivering">
            <summary>
            Next quarter delivering
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.ContractType.NextMonth">
            <summary>
            Next month
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.ContractType.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="T:Aster.Net.Enums.ExecutionType">
            <summary>
            Execution type
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.ExecutionType.New">
            <summary>
            New
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.ExecutionType.Canceled">
            <summary>
            Canceled
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.ExecutionType.Liquidation">
            <summary>
            Liquidation
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.ExecutionType.Expired">
            <summary>
            Expired
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.ExecutionType.Trade">
            <summary>
            Trade
            </summary>
        </member>
        <member name="T:Aster.Net.Enums.IncomeType">
            <summary>
            Income type
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.IncomeType.Transfer">
            <summary>
            Transfer
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.IncomeType.WelcomeBonus">
            <summary>
            Welcome bonus
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.IncomeType.RealizedPnl">
            <summary>
            Realized profit and loss
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.IncomeType.FundingFee">
            <summary>
            Funding fee
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.IncomeType.Commission">
            <summary>
            Commission
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.IncomeType.InsuranceClear">
            <summary>
            Insurance clear
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.IncomeType.MarketMerchantReturnReward">
            <summary>
            Market merchant return reward
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.IncomeType.TransferFutureToSpotAccount">
            <summary>
            Transfer future to spot account
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.IncomeType.TransfereSpotToFuturesAccount">
            <summary>
            Transfer spot to future account
            </summary>
        </member>
        <member name="T:Aster.Net.Enums.KlineInterval">
            <summary>
            The interval for the kline, the int value represents the time in seconds
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.KlineInterval.OneMinute">
            <summary>
            1m
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.KlineInterval.ThreeMinutes">
            <summary>
            3m
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.KlineInterval.FiveMinutes">
            <summary>
            5m
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.KlineInterval.FifteenMinutes">
            <summary>
            15m
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.KlineInterval.ThirtyMinutes">
            <summary>
            30m
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.KlineInterval.OneHour">
            <summary>
            1h
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.KlineInterval.TwoHour">
            <summary>
            2h
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.KlineInterval.FourHour">
            <summary>
            4h
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.KlineInterval.SixHour">
            <summary>
            6h
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.KlineInterval.EightHour">
            <summary>
            8h
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.KlineInterval.TwelveHour">
            <summary>
            12h
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.KlineInterval.OneDay">
            <summary>
            1d
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.KlineInterval.ThreeDay">
            <summary>
            3d
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.KlineInterval.OneWeek">
            <summary>
            1w
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.KlineInterval.OneMonth">
            <summary>
            1M
            </summary>
        </member>
        <member name="T:Aster.Net.Enums.MarginAdjustSide">
            <summary>
            Margin adjust side
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.MarginAdjustSide.Add">
            <summary>
            Add
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.MarginAdjustSide.Remove">
            <summary>
            Remove
            </summary>
        </member>
        <member name="T:Aster.Net.Enums.MarginType">
            <summary>
            Margin type
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.MarginType.Cross">
            <summary>
            Cross margin
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.MarginType.Isolated">
            <summary>
            Isolated margin
            </summary>
        </member>
        <member name="T:Aster.Net.Enums.NetworkType">
            <summary>
            Network type
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.NetworkType.Ethereum">
            <summary>
            Ethereum
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.NetworkType.BSC">
            <summary>
            Binance chain
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.NetworkType.Arbi">
            <summary>
            Arbitrum
            </summary>
        </member>
        <member name="T:Aster.Net.Enums.OrderSide">
            <summary>
            Order side
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.OrderSide.Buy">
            <summary>
            Buy order
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.OrderSide.Sell">
            <summary>
            Sell order
            </summary>
        </member>
        <member name="T:Aster.Net.Enums.OrderStatus">
            <summary>
            Order status
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.OrderStatus.New">
            <summary>
            New/unfilled order
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.OrderStatus.PartiallyFilled">
            <summary>
            Partially filled order
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.OrderStatus.Filled">
            <summary>
            Filled order
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.OrderStatus.Canceled">
            <summary>
            Canceled order
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.OrderStatus.Rejected">
            <summary>
            Rejected order
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.OrderStatus.Expired">
            <summary>
            Expired order
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.OrderStatus.InsuranceFundLiquidation">
            <summary>
            Insurance fund liquidation
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.OrderStatus.CounterPartyLiquidation">
            <summary>
            Counter party liquidation
            </summary>
        </member>
        <member name="T:Aster.Net.Enums.OrderType">
            <summary>
            Order type for a futures order
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.OrderType.Limit">
            <summary>
            Limit orders will be placed at a specific price. If the price isn't available in the order book for that asset the order will be added in the order book for someone to fill.
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.OrderType.Market">
            <summary>
            Market order will be placed without a price. The order will be executed at the best price available at that time in the order book.
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.OrderType.Stop">
            <summary>
            Stop order. Execute a limit order when price reaches a specific Stop price
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.OrderType.StopMarket">
            <summary>
            Stop market order. Execute a market order when price reaches a specific Stop price
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.OrderType.TakeProfit">
            <summary>
            Take profit order. Will execute a limit order when the price rises above a price to sell and therefor take a profit
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.OrderType.TakeProfitMarket">
            <summary>
            Take profit market order. Will execute a market order when the price rises above a price to sell and therefor take a profit
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.OrderType.TrailingStopMarket">
            <summary>
            A trailing stop order will execute an order when the price drops below a certain percentage from its all time high since the order was activated
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.OrderType.Liquidation">
            <summary>
            A liquidation order
            </summary>
        </member>
        <member name="T:Aster.Net.Enums.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.PositionSide.Both">
            <summary>
            One way mode
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.PositionSide.Long">
            <summary>
            Long
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.PositionSide.Short">
            <summary>
            Short
            </summary>
        </member>
        <member name="T:Aster.Net.Enums.RateLimitInterval">
            <summary>
            Rate limit on what unit
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.RateLimitInterval.Second">
            <summary>
            Seconds
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.RateLimitInterval.Minute">
            <summary>
            Minutes
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.RateLimitInterval.Day">
            <summary>
            Days
            </summary>
        </member>
        <member name="T:Aster.Net.Enums.RateLimitType">
            <summary>
            Type of rate limit
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.RateLimitType.RequestWeight">
            <summary>
            Request weight
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.RateLimitType.Orders">
            <summary>
            Order amount
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.RateLimitType.RawRequests">
            <summary>
            Raw requests
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.RateLimitType.Connections">
            <summary>
            Connections
            </summary>
        </member>
        <member name="T:Aster.Net.Enums.SymbolFilterType">
            <summary>
            Filter type
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.SymbolFilterType.Unknown">
            <summary>
            Unknown filter type
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.SymbolFilterType.Price">
            <summary>
            Price filter
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.SymbolFilterType.PricePercent">
            <summary>
            Price percent filter
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.SymbolFilterType.LotSize">
            <summary>
            Lot size filter
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.SymbolFilterType.MarketLotSize">
            <summary>
            Market lot size filter
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.SymbolFilterType.MinNotional">
            <summary>
            Min notional filter
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.SymbolFilterType.MaxNumberOrders">
            <summary>
            Max orders filter
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.SymbolFilterType.MaxNumberAlgorithmicOrders">
            <summary>
            Max algo orders filter
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.SymbolFilterType.IcebergParts">
            <summary>
            Max iceberg parts filter
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.SymbolFilterType.MaxPosition">
            <summary>
            Max position filter
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.SymbolFilterType.PercentagePriceBySide">
            <summary>
            Price filter by side
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.SymbolFilterType.TrailingDelta">
            <summary>
            Trailing delta filter
            </summary>,
        </member>
        <member name="F:Aster.Net.Enums.SymbolFilterType.Notional">
            <summary>
            Notional filter
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.SymbolFilterType.IcebergOrders">
            <summary>
            Max Iceberg Orders filter
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.SymbolFilterType.PositionRiskControl">
            <summary>
            Position Risk Control Filter
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.SymbolFilterType.OrderAmends">
            <summary>
            Max number of edits per order
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.SymbolFilterType.OrderLists">
            <summary>
            Max number of order lists
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.SymbolFilterType.MaxNotional">
            <summary>
            Max notional value
            </summary>
        </member>
        <member name="T:Aster.Net.Enums.SymbolStatus">
            <summary>
            Status of a symbol
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.SymbolStatus.PreTrading">
            <summary>
            Not trading yet
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.SymbolStatus.PendingTrading">
            <summary>
            Pending trading
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.SymbolStatus.Trading">
            <summary>
            Trading
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.SymbolStatus.PostTrading">
            <summary>
            No longer trading
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.SymbolStatus.EndOfDay">
            <summary>
            Not trading
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.SymbolStatus.Halt">
            <summary>
            Halted
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.SymbolStatus.AuctionMatch">
            <summary>
            
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.SymbolStatus.Break">
            <summary>
            
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.SymbolStatus.Close">
            <summary>
            Closed
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.SymbolStatus.PreDelivering">
            <summary>
            Pre delivering
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.SymbolStatus.Delivering">
            <summary>
            Delivering
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.SymbolStatus.PreSettle">
            <summary>
            Pre settle
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.SymbolStatus.Settling">
            <summary>
            Settings
            </summary>
        </member>
        <member name="T:Aster.Net.Enums.TimeInForce">
            <summary>
            The time the order will be active for
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.TimeInForce.GoodTillCanceled">
            <summary>
            GoodTillCanceled orders will stay active until they are filled or canceled
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.TimeInForce.ImmediateOrCancel">
            <summary>
            ImmediateOrCancel orders have to be at least partially filled upon placing or will be automatically canceled
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.TimeInForce.FillOrKill">
            <summary>
            FillOrKill orders have to be entirely filled upon placing or will be automatically canceled
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.TimeInForce.GoodTillCrossing">
            <summary>
            GoodTillCrossing orders will post only
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.TimeInForce.GoodTillExpiredOrCanceled">
            <summary>
            Good til the order expires or is canceled
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.TimeInForce.Rpi">
            <summary>
            RPI
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.TimeInForce.Hidden">
            <summary>
            Hidden
            </summary>
        </member>
        <member name="T:Aster.Net.Enums.TransferDirection">
            <summary>
            Transfer direction
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.TransferDirection.FuturesToSpot">
            <summary>
            Futures to spot
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.TransferDirection.SpotToFutures">
            <summary>
            Spot to futures
            </summary>
        </member>
        <member name="T:Aster.Net.Enums.UnderlyingType">
            <summary>
            Underlying Type
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.UnderlyingType.Coin">
            <summary>
            Coin
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.UnderlyingType.Index">
            <summary>
            Index
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.UnderlyingType.PreMarket">
            <summary>
            Pre-market
            </summary>
        </member>
        <member name="T:Aster.Net.Enums.WorkingType">
            <summary>
            Working type
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.WorkingType.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="F:Aster.Net.Enums.WorkingType.ContractPrice">
            <summary>
            Contract price
            </summary>
        </member>
        <member name="T:Aster.Net.ExtensionMethods.AsterExtensionMethods">
            <summary>
            Extension methods specific to using the Aster API
            </summary>
        </member>
        <member name="T:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApi">
            <summary>
            Aster Futures API endpoints
            </summary>
        </member>
        <member name="P:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApi.Account">
            <summary>
            Endpoints related to account settings, info or actions
            </summary>
            <see cref="T:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiAccount" />
        </member>
        <member name="P:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApi.ExchangeData">
            <summary>
            Endpoints related to retrieving market and system data
            </summary>
            <see cref="T:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiExchangeData" />
        </member>
        <member name="P:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApi.Trading">
            <summary>
            Endpoints related to orders and trades
            </summary>
            <see cref="T:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiTrading" />
        </member>
        <member name="P:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApi.SharedClient">
            <summary>
            Get the shared rest requests client. This interface is shared with other exchanges to allow for a common implementation for different exchanges.
            </summary>
        </member>
        <member name="T:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiAccount">
            <summary>
            Aster Futures account endpoints. Account endpoints include balance info, withdraw/deposit info and requesting and account settings
            </summary>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiAccount.SetPositionModeAsync(System.Boolean,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Set the position mode for the whole account
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#change-position-modetrade" /></para>
            </summary>
            <param name="dualPositionSide">True: Hedge mode, False: One-way mode</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiAccount.GetPositionModeAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get the current account position mode
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#get-current-multi-assets-mode-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiAccount.SetMultiAssetModeAsync(System.Boolean,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Set multi asset margin mode
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api-v3.md#change-multi-assets-mode-trade" /></para>
            </summary>
            <param name="multiAssetMargin">Multi asset mode margin enabled or not</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiAccount.GetMultiAssetModeAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get multi asset margin mode
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api-v3.md#get-current-multi-assets-mode-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiAccount.TransferAsync(System.String,Aster.Net.Enums.TransferDirection,System.Decimal,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Transfer between Spot and Futures account
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api-v3.md#transfer-between-futures-and-spot-user_data" /></para>
            </summary>
            <param name="asset">Asset to transfer</param>
            <param name="direction">Transfer direction</param>
            <param name="quantity">Quantity</param>
            <param name="clientOrderId">Client defined id</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiAccount.GetBalancesAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get account balances
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#futures-account-balance-v2-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiAccount.GetAccountInfoAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get account info, including assets and positions
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#account-information-v4-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiAccount.SetLeverageAsync(System.String,System.Int32,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Set initial leverage
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#change-initial-leverage-trade" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="leverage">Leverage</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiAccount.SetMarginTypeAsync(System.String,Aster.Net.Enums.MarginType,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Set margin type
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#change-margin-type-trade" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="marginType">Margin type</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiAccount.ModifyIsolatedMarginAsync(System.String,Aster.Net.Enums.MarginAdjustSide,System.Decimal,System.Nullable{Aster.Net.Enums.PositionSide},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Modify isolated margin
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#modify-isolated-position-margin-trade" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="side">Adjust side</param>
            <param name="quantity">Quantity to add or remove</param>
            <param name="positionSide">Position side</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiAccount.GetPositionMarginChangeHistoryAsync(System.String,System.Nullable{Aster.Net.Enums.MarginAdjustSide},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get position margin change history
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#get-position-margin-change-history-trade" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="side">Filter by adjust side</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max number of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiAccount.GetIncomeHistoryAsync(System.String,System.Nullable{Aster.Net.Enums.IncomeType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get income history
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#get-income-historyuser_data" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="type">Filter by type</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max number of results, max 1000</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiAccount.GetLeverageBracketsAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get leverage brackets
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#notional-and-leverage-brackets-user_data" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiAccount.GetPositionAdlQuantileEstimationAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get position ADL quantile estimations
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#position-adl-quantile-estimation-user_data" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiAccount.GetUserCommissionRateAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get user fee rates
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#user-commission-rate-user_data" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiAccount.StartUserStreamAsync(System.Threading.CancellationToken)">
            <summary>
            Start a user stream. The resulting listen key can be used to subscribe to the user stream using the socket client. The stream will close after 60 minutes unless <see cref="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiAccount.KeepAliveUserStreamAsync(System.String,System.Threading.CancellationToken)">KeepAliveUserStreamAsync</see> is called.
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#start-user-data-stream-user_stream" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiAccount.KeepAliveUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Keep alive the user stream. This should be called every 30 minutes to prevent the user stream being stopped
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#keepalive-user-data-stream-user_stream" /></para>
            </summary>
            <param name="listenKey">The listen key to keep alive</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiAccount.StopUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Stop the user stream, no updates will be send anymore
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#close-user-data-stream-user_stream" /></para>
            </summary>
            <param name="listenKey">The listen key to stop</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiExchangeData">
            <summary>
            Aster Futures exchange data endpoints. Exchange data includes market data (tickers, order books, etc) and system status.
            </summary>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <summary>
            Get the current server time
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#check-server-time" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiExchangeData.GetExchangeInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Get symbol and asset information
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#exchange-information" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiExchangeData.GetOrderBookAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get a snapshot of the current order book
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#order-book" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="limit">Number of rows in the orderbook. 5, 10, 20, 50, 100, 500 or 1000</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiExchangeData.GetRecentTradesAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get list of the most recent trades
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#recent-trades-list" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="limit">Number of rows to return, max 1000</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiExchangeData.GetTradeHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get trade history
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#old-trades-lookup-market_data" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="limit">Number of rows to return, max 1000</param>
            <param name="fromId">Return from this id</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiExchangeData.GetAggregatedTradeHistoryAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get aggregated trade history. Trades are aggregated if they're executed on the same time at the same price.
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#compressedaggregate-trades-list" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="fromId">Return from this id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Number of rows to return, max 1000</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiExchangeData.GetKlinesAsync(System.String,Aster.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get kline/candlestick data
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#klinecandlestick-data" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="interval">Kline interval</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Number of rows to return, max 1500</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiExchangeData.GetIndexPriceKlinesAsync(System.String,Aster.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get index kline data
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#klinecandlestick-data" /></para>
            </summary>
            <param name="index">The index</param>
            <param name="interval">Kline interval</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Number of rows to return, max 1500</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiExchangeData.GetMarkPriceKlinesAsync(System.String,Aster.Net.Enums.KlineInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Get mark price kline data
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#klinecandlestick-data" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="interval">Kline interval</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Number of rows to return, max 1500</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiExchangeData.GetMarkPriceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get mark price for a symbol
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#mark-price" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiExchangeData.GetMarkPricesAsync(System.Threading.CancellationToken)">
            <summary>
            Get mark price for all symbols
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#mark-price" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiExchangeData.GetFundingRatesAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get funding rate history
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#get-funding-rate-history" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Number of rows to return, max 1000</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiExchangeData.GetFundingInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Get funding rate configuration
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#get-funding-rate-history" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiExchangeData.GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get price ticker info
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#24hr-ticker-price-change-statistics" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiExchangeData.GetTickersAsync(System.Threading.CancellationToken)">
            <summary>
            Get price ticker info
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#24hr-ticker-price-change-statistics" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiExchangeData.GetPriceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get last price
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#symbol-price-ticker" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiExchangeData.GetPricesAsync(System.Threading.CancellationToken)">
            <summary>
            Get last prices
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#symbol-price-ticker" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiExchangeData.GetBookTickerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get book ticker
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#symbol-order-book-ticker" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiExchangeData.GetBookTickersAsync(System.Threading.CancellationToken)">
            <summary>
            Get book tickers
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#symbol-order-book-ticker" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="T:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiShared">
            <summary>
            Shared interface for Futures rest API usage
            </summary>
        </member>
        <member name="T:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiTrading">
            <summary>
            Aster Futures trading endpoints, placing and managing orders.
            </summary>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiTrading.PlaceOrderAsync(System.String,Aster.Net.Enums.OrderSide,Aster.Net.Enums.OrderType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Aster.Net.Enums.PositionSide},System.Nullable{Aster.Net.Enums.TimeInForce},System.Nullable{System.Boolean},System.String,System.Nullable{System.Decimal},System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Aster.Net.Enums.WorkingType},System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Place a new order
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#new-order--trade" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="side">Order side</param>
            <param name="type">Order type</param>
            <param name="quantity">Order quantity</param>
            <param name="price">Limit price</param>
            <param name="positionSide">Position side</param>
            <param name="timeInForce">Time in force</param>
            <param name="reduceOnly">Reduce only order</param>
            <param name="clientOrderId">Client order id</param>
            <param name="stopPrice">Stop price</param>
            <param name="closePosition">Close full position flag</param>
            <param name="activationPrice">Activation price</param>
            <param name="callbackRate">Callback rate</param>
            <param name="workingType">Working price type</param>
            <param name="priceProtect">Price protect</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiTrading.PlaceMultipleOrdersAsync(System.Collections.Generic.IEnumerable{Aster.Net.Objects.Models.AsterOrderRequest},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Place multiple new orders in a single call
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api-v3.md#place-multiple-orders--trade" /></para>
            </summary>
            <param name="orders">Orders to place</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiTrading.GetOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get order info by id or clientOrderId
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#query-order-user_data" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="orderId">Get by order id, either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Get by clientOrderId, either this or orderId should be provided</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiTrading.CancelOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancel and order by id or clientOrderId
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#cancel-order-trade" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="orderId">Get by order id, either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Get by clientOrderId, either this or orderId should be provided</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiTrading.CancelAllOrdersAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancel all open orders for a symbol
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#cancel-all-open-orders-trade" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiTrading.CancelMultipleOrdersAsync(System.String,System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancel multiple orders in a single call
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="orderIdList">List or order ids</param>
            <param name="clientOrderIdList">List of client order ids</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiTrading.CancelAllOrdersAfterTimeoutAsync(System.String,System.TimeSpan,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancel all open orders on a symbol when the timeout expires. Can be called on an interval to act as a dead man switch
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#auto-cancel-all-open-orders-trade" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="countDownTime">Timeout time</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiTrading.GetOpenOrdersAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get list of current open orders
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#current-all-open-orders-user_data" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiTrading.GetOrdersAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get list of all orders
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#all-orders-user_data" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="orderId">Return orders after this id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max number of results, max 1000</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiTrading.GetPositionsAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get positions
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#position-information-v2-user_data" /></para>
            </summary>
            <param name="symbol">Filter by symbol, for example `ETHUSDT`</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiTrading.GetUserTradesAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get user trade history
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#account-trade-list-user_data" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="fromId">Return results after this</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max number of results, max 1000</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiTrading.GetForcedOrdersAsync(System.String,System.Nullable{Aster.Net.Enums.AutoCloseType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get users forced orders
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#users-force-orders-user_data" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="closeType">Filter by close type</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max number of results, max 100</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="T:Aster.Net.Interfaces.Clients.FuturesApi.IAsterSocketClientFuturesApi">
            <summary>
            Aster Futures streams
            </summary>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterSocketClientFuturesApi.SubscribeToAggregatedTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterAggregatedTradeUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to aggregated trade updates
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#aggregate-trade-streams" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterSocketClientFuturesApi.SubscribeToAggregatedTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterAggregatedTradeUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to aggregated trade updates
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#aggregate-trade-streams" /></para>
            </summary>
            <param name="symbols">Symbols</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterSocketClientFuturesApi.SubscribeToMarkPriceUpdatesAsync(System.String,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterMarkPriceUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to mark price updates
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#mark-price-stream" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="updateInterval">The interval for updates in milliseconds, either 1000 or 3000</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterSocketClientFuturesApi.SubscribeToMarkPriceUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterMarkPriceUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to mark price updates
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#mark-price-stream" /></para>
            </summary>
            <param name="symbols">Symbols</param>
            <param name="updateInterval">The interval for updates in milliseconds, either 1000 or 3000</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterSocketClientFuturesApi.SubscribeToMarkPriceUpdatesAsync(System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterMarkPriceUpdate[]}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to mark price updates for all symbols
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#mark-price-stream-for-all-market" /></para>
            </summary>
            <param name="updateInterval">The interval for updates in milliseconds, either 1000 or 3000</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterSocketClientFuturesApi.SubscribeToKlineUpdatesAsync(System.String,Aster.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterKlineUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to kline/candlestick updates
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#klinecandlestick-streams" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="interval">Interval for the klines</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterSocketClientFuturesApi.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},Aster.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterKlineUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to kline/candlestick updates
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#klinecandlestick-streams" /></para>
            </summary>
            <param name="symbols">The symbols</param>
            <param name="interval">Interval for the klines</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterSocketClientFuturesApi.SubscribeToKlineUpdatesAsync(System.String,System.Collections.Generic.IEnumerable{Aster.Net.Enums.KlineInterval},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterKlineUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to kline/candlestick updates
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#klinecandlestick-streams" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="intervals">Intervals for the klines</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterSocketClientFuturesApi.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Aster.Net.Enums.KlineInterval},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterKlineUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to kline/candlestick updates
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#klinecandlestick-streams" /></para>
            </summary>
            <param name="symbols">The symbols</param>
            <param name="intervals">Intervals for the klines</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterSocketClientFuturesApi.SubscribeToMiniTickerUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterMiniTickUpdate[]}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to mini price ticker updates for all symbols
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#all-market-mini-tickers-stream" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterSocketClientFuturesApi.SubscribeToMiniTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterMiniTickUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to mini price ticker updates
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#individual-symbol-mini-ticker-stream" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterSocketClientFuturesApi.SubscribeToMiniTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterMiniTickUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to mini price ticker updates
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#individual-symbol-mini-ticker-stream" /></para>
            </summary>
            <param name="symbols">Symbols</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterSocketClientFuturesApi.SubscribeToTickerUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterTickerUpdate[]}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to price ticker updates for all symbols
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#all-market-tickers-streams" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterSocketClientFuturesApi.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to price ticker updates
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#individual-symbol-ticker-streams" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterSocketClientFuturesApi.SubscribeToTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to price ticker updates
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#individual-symbol-ticker-streams" /></para>
            </summary>
            <param name="symbols">Symbols</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterSocketClientFuturesApi.SubscribeToBookTickerUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterBookTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to book ticker updates for all symbols
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#all-book-tickers-stream" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterSocketClientFuturesApi.SubscribeToBookTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterBookTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to book ticker updates
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#individual-symbol-book-ticker-streams" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterSocketClientFuturesApi.SubscribeToBookTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterBookTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to book ticker updates
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#individual-symbol-book-ticker-streams" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterSocketClientFuturesApi.SubscribeToLiquidationUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterLiquidationUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to liquidation updates for all symbols
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#all-market-liquidation-order-streams" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterSocketClientFuturesApi.SubscribeToLiquidationUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterLiquidationUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to liquidation updates
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#liquidation-order-streams" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterSocketClientFuturesApi.SubscribeToLiquidationUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterLiquidationUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to liquidation updates
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#liquidation-order-streams" /></para>
            </summary>
            <param name="symbols">Symbols</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterSocketClientFuturesApi.SubscribeToPartialOrderBookUpdatesAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterOrderBookUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to snapshot order book updates for the top x rows
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#partial-book-depth-streams" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="levels">Number of rows, 5, 10 or 20</param>
            <param name="updateInterval">Update interval in milliseconds, either 100, 250 or 500</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterSocketClientFuturesApi.SubscribeToPartialOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterOrderBookUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to snapshot order book updates for the top x rows
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#partial-book-depth-streams" /></para>
            </summary>
            <param name="symbols">Symbols</param>
            <param name="levels">Number of rows, 5, 10 or 20</param>
            <param name="updateInterval">Update interval in milliseconds, either 100, 250 or 500</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterSocketClientFuturesApi.SubscribeToOrderBookUpdatesAsync(System.String,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterOrderBookUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to order book difference updates
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#diff-book-depth-streams" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="updateInterval">Update interval in milliseconds, either 100, 250 or 500</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterSocketClientFuturesApi.SubscribeToOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterOrderBookUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to order book difference updates
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#diff-book-depth-streams" /></para>
            </summary>
            <param name="symbols">Symbols</param>
            <param name="updateInterval">Update interval in milliseconds, either 100, 250 or 500</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterSocketClientFuturesApi.SubscribeToUserDataUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterConfigUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterMarginUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterAccountUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterOrderUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterSocketEvent}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the account update stream. Prior to using this, the <see cref="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiAccount.StartUserStreamAsync(System.Threading.CancellationToken)">restClient.FuturesApi.Account.StartUserStreamAsync</see> method should be called to start the stream and obtaining a listen key.
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-futures-api.md#event-user-data-stream-expired" /></para>
            </summary>
            <param name="listenKey">Listen key retrieved by the <see cref="M:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApiAccount.StartUserStreamAsync(System.Threading.CancellationToken)">restClient.FuturesApi.Account.StartUserStreamAsync</see> method</param>
            <param name="onConfigUpdate">The event handler for leverage changed update</param>
            <param name="onMarginUpdate">The event handler for whenever a margin has changed</param>
            <param name="onAccountUpdate">The event handler for whenever an account update is received</param>
            <param name="onOrderUpdate">The event handler for whenever an order status update is received</param>
            <param name="onListenKeyExpired">Responds when the listen key for the stream has expired. Initiate a new instance of the stream here</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="P:Aster.Net.Interfaces.Clients.FuturesApi.IAsterSocketClientFuturesApi.SharedClient">
            <summary>
            Get the shared socket requests client. This interface is shared with other exchanges to allow for a common implementation for different exchanges.
            </summary>
        </member>
        <member name="T:Aster.Net.Interfaces.Clients.FuturesApi.IAsterSocketClientFuturesApiShared">
            <summary>
            Shared interface for Futures socket API usage
            </summary>
        </member>
        <member name="T:Aster.Net.Interfaces.Clients.IAsterRestClient">
            <summary>
            Client for accessing the Aster Rest API. 
            </summary>
        </member>
        <member name="P:Aster.Net.Interfaces.Clients.IAsterRestClient.SpotApi">
            <summary>
            Spot API endpoints
            </summary>
            <see cref="T:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApi"/>
        </member>
        <member name="P:Aster.Net.Interfaces.Clients.IAsterRestClient.FuturesApi">
            <summary>
            Futures API endpoints
            </summary>
            <see cref="T:Aster.Net.Interfaces.Clients.FuturesApi.IAsterRestClientFuturesApi"/>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.IAsterRestClient.SetOptions(CryptoExchange.Net.Objects.Options.UpdateOptions)">
            <summary>
            Update specific options
            </summary>
            <param name="options">Options to update. Only specific options are changeable after the client has been created</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.IAsterRestClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <summary>
            Set the API credentials for this client. All Api clients in this client will use the new credentials, regardless of earlier set options.
            </summary>
            <param name="credentials">The credentials to set</param>
        </member>
        <member name="T:Aster.Net.Interfaces.Clients.IAsterSocketClient">
            <summary>
            Client for accessing the Aster websocket API
            </summary>
        </member>
        <member name="P:Aster.Net.Interfaces.Clients.IAsterSocketClient.SpotApi">
            <summary>
            Spot API endpoints
            </summary>
            <see cref="T:Aster.Net.Interfaces.Clients.SpotApi.IAsterSocketClientSpotApi"/>
        </member>
        <member name="P:Aster.Net.Interfaces.Clients.IAsterSocketClient.FuturesApi">
            <summary>
            Futures API endpoints
            </summary>
            <see cref="T:Aster.Net.Interfaces.Clients.FuturesApi.IAsterSocketClientFuturesApi"/>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.IAsterSocketClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <summary>
            Set the API credentials for this client. All Api clients in this client will use the new credentials, regardless of earlier set options.
            </summary>
            <param name="credentials">The credentials to set</param>
        </member>
        <member name="T:Aster.Net.Interfaces.Clients.IAsterUserClientProvider">
            <summary>
            Provider for clients with credentials for specific users
            </summary>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.IAsterUserClientProvider.InitializeUserClient(System.String,CryptoExchange.Net.Authentication.ApiCredentials,Aster.Net.AsterEnvironment)">
            <summary>
            Initialize a client for the specified user identifier. This can be used so to initialize a client for a user so ApiCredentials do not need to be passed later.
            </summary>
            <param name="userIdentifier">The identifier for the user</param>
            <param name="credentials">The credentials for the user</param>
            <param name="environment">The environment to use</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.IAsterUserClientProvider.ClearUserClients(System.String)">
            <summary>
            Reset the cached clients for a user. This can be useful when a user changes API credentials.
            </summary>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.IAsterUserClientProvider.GetRestClient(System.String,CryptoExchange.Net.Authentication.ApiCredentials,Aster.Net.AsterEnvironment)">
            <summary>
            Get the Rest client for a specific user. In case the client does not exist yet it will be created and the <paramref name="credentials"/> should be provided, unless <see cref="M:Aster.Net.Interfaces.Clients.IAsterUserClientProvider.InitializeUserClient(System.String,CryptoExchange.Net.Authentication.ApiCredentials,Aster.Net.AsterEnvironment)" /> has been called prior for this user.
            </summary>
            <param name="userIdentifier">The identifier for user</param>
            <param name="credentials">The credentials for the user. Required the first time a client is requested for this user unless <see cref="M:Aster.Net.Interfaces.Clients.IAsterUserClientProvider.InitializeUserClient(System.String,CryptoExchange.Net.Authentication.ApiCredentials,Aster.Net.AsterEnvironment)" /> has been called prior for this user.</param>
            <param name="environment">The environment to use</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.IAsterUserClientProvider.GetSocketClient(System.String,CryptoExchange.Net.Authentication.ApiCredentials,Aster.Net.AsterEnvironment)">
            <summary>
            Get the Socket client for a specific user. In case the client does not exist yet it will be created and the <paramref name="credentials"/> should be provided, unless <see cref="M:Aster.Net.Interfaces.Clients.IAsterUserClientProvider.InitializeUserClient(System.String,CryptoExchange.Net.Authentication.ApiCredentials,Aster.Net.AsterEnvironment)" /> has been called prior for this user.
            </summary>
            <param name="userIdentifier">The identifier for user</param>
            <param name="credentials">The credentials for the user. Required the first time a client is requested for this user unless <see cref="M:Aster.Net.Interfaces.Clients.IAsterUserClientProvider.InitializeUserClient(System.String,CryptoExchange.Net.Authentication.ApiCredentials,Aster.Net.AsterEnvironment)" /> has been called prior for this user.</param>
            <param name="environment">The environment to use</param>
        </member>
        <member name="T:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApi">
            <summary>
            Aster Spot API endpoints
            </summary>
        </member>
        <member name="P:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApi.Account">
            <summary>
            Endpoints related to account settings, info or actions
            </summary>
            <see cref="T:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiAccount" />
        </member>
        <member name="P:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApi.ExchangeData">
            <summary>
            Endpoints related to retrieving market and system data
            </summary>
            <see cref="T:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiExchangeData" />
        </member>
        <member name="P:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApi.Trading">
            <summary>
            Endpoints related to orders and trades
            </summary>
            <see cref="T:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiTrading" />
        </member>
        <member name="P:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApi.SharedClient">
            <summary>
            Get the shared rest requests client. This interface is shared with other exchanges to allow for a common implementation for different exchanges.
            </summary>
        </member>
        <member name="T:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiAccount">
            <summary>
            Aster Spot account endpoints. Account endpoints include balance info, withdraw/deposit info and requesting and account settings
            </summary>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiAccount.GetUserCommissionRateAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get user fee rates
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#get-symbol-fees" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiAccount.TransferAsync(System.String,Aster.Net.Enums.TransferDirection,System.Decimal,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Transfer between Spot and Futures account
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#perp-spot-transfer-trade" /></para>
            </summary>
            <param name="asset">Asset to transfer</param>
            <param name="direction">Transfer direction</param>
            <param name="quantity">Quantity</param>
            <param name="clientOrderId">Client defined id</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiAccount.SendToAddressAsync(System.String,System.String,System.Decimal,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Send to a different address
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#transfer-asset-to-other-address-trade" /></para>
            </summary>
            <param name="asset">Asset to send</param>
            <param name="toAddress">Target EVM address</param>
            <param name="quantity">Quantity</param>
            <param name="clientOrderId">Client defined id, min 20 characters</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiAccount.GetWithdrawFeeAsync(System.String,Aster.Net.Enums.NetworkType,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get withdrawal fee
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#get-withdraw-fee-none" /></para>
            </summary>
            <param name="asset">Asset to withdraw</param>
            <param name="network">Network type</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiAccount.GetAccountInfoAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get account info and balances
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#account-information-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiAccount.StartUserStreamAsync(System.Threading.CancellationToken)">
            <summary>
            Start a user stream. The resulting listen key can be used to subscribe to the user stream using the socket client. The stream will close after 60 minutes unless <see cref="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiAccount.KeepAliveUserStreamAsync(System.String,System.Threading.CancellationToken)">KeepAliveUserStreamAsync</see> is called.
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#generate-listen-key-user_stream" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiAccount.KeepAliveUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Keep alive the user stream. This should be called every 30 minutes to prevent the user stream being stopped
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#extend-listen-key-validity-period-user_stream" /></para>
            </summary>
            <param name="listenKey">The listen key to keep alive</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiAccount.StopUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Stop the user stream, no updates will be send anymore
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#close-listen-key-user_stream" /></para>
            </summary>
            <param name="listenKey">The listen key to stop</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiExchangeData">
            <summary>
            Aster Spot exchange data endpoints. Exchange data includes market data (tickers, order books, etc) and system status.
            </summary>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <summary>
            Get the current server time
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#get-server-time" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiExchangeData.GetExchangeInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Get exchange information
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#trading-specification-information" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiExchangeData.GetOrderBookAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get order book snapshot
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#depth-information" /></para>
            </summary>
            <param name="symbol">Symbol name, for example `ETHUSDT`</param>
            <param name="limit">Max number of results. 5, 10, 20, 50, 100, 500 or 1000</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiExchangeData.GetRecentTradesAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get recent trades for a symbol
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#recent-trades-list" /></para>
            </summary>
            <param name="symbol">Symbol name, for example `ETHUSDT`</param>
            <param name="limit">Max number of results. Max 1000</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiExchangeData.GetTradeHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get trade history
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#query-historical-trades-market_data" /></para>
            </summary>
            <param name="symbol">Symbol name, for example `ETHUSDT`</param>
            <param name="fromId">Return results after this</param>
            <param name="limit">Max number of results. Max 1000</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiExchangeData.GetAggregatedTradeHistoryAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get aggregated trade history
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#query-historical-trades-market_data" /></para>
            </summary>
            <param name="symbol">Symbol name, for example `ETHUSDT`</param>
            <param name="fromId">Return results after this</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max number of results. Max 1000</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiExchangeData.GetKlinesAsync(System.String,Aster.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get kline/candlestick data
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#k-line-data" /></para>
            </summary>
            <param name="symbol">Symbol name, for example `ETHUSDT`</param>
            <param name="interval">Kline interval</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max number of results. Max 1500</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiExchangeData.GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get price ticker info
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#24h-price-change" /></para>
            </summary>
            <param name="symbol">Symbol name, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiExchangeData.GetTickersAsync(System.Threading.CancellationToken)">
            <summary>
            Get price ticker info for all symbols
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#24h-price-change" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiExchangeData.GetPriceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get price info for a symbol
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#latest-price" /></para>
            </summary>
            <param name="symbol">Symbol name, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiExchangeData.GetPricesAsync(System.Threading.CancellationToken)">
            <summary>
            Get price info for all symbols
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#latest-price" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiExchangeData.GetBookTickerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get book ticker
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#current-best-order" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiExchangeData.GetBookTickersAsync(System.Threading.CancellationToken)">
            <summary>
            Get book tickers
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#current-best-order" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="T:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiShared">
            <summary>
            Shared interface for Spot rest API usage
            </summary>
        </member>
        <member name="T:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiTrading">
            <summary>
            Aster Spot trading endpoints, placing and managing orders.
            </summary>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiTrading.PlaceOrderAsync(System.String,Aster.Net.Enums.OrderSide,Aster.Net.Enums.OrderType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{Aster.Net.Enums.TimeInForce},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Place a new order
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#place-order-trade" /></para>
            </summary>
            <param name="symbol">Symbol name, for example `ETHUSDT`</param>
            <param name="side">Order side</param>
            <param name="type">Order type</param>
            <param name="quantity">Quantity in base asset</param>
            <param name="quoteQuantity">Quantity in quote asset</param>
            <param name="clientOrderId">Client order id</param>
            <param name="price">Limit price</param>
            <param name="timeInForce">Time in force</param>
            <param name="stopPrice">Stop price</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiTrading.CancelOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancel an order
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#cancel-order-trade" /></para>
            </summary>
            <param name="symbol">Symbol name, for example `ETHUSDT`</param>
            <param name="orderId">Cancel by order id</param>
            <param name="clientOrderId">Cancel by client order id</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiTrading.GetOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get info on an order
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#query-order-user_data" /></para>
            </summary>
            <param name="symbol">Symbol name, for example `ETHUSDT`</param>
            <param name="orderId">Cancel by order id</param>
            <param name="clientOrderId">Cancel by client order id</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiTrading.GetOpenOrdersAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get current open order list
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#current-open-orders-user_data" /></para>
            </summary>
            <param name="symbol">Symbol name, for example `ETHUSDT`</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiTrading.CancelAllOrdersAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancel all open orders for a symbol
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#cancel-all-open-orders-trade" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiTrading.GetOrdersAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get list of all orders
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#query-all-orders-user_data" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="orderId">Return orders after this id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max number of results, max 1000</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiTrading.GetUserTradesAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get user trades
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#account-trade-history-user_data" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="orderId">Filter by order id</param>
            <param name="fromId">Return orders after this id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max number of results, max 1000</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="T:Aster.Net.Interfaces.Clients.SpotApi.IAsterSocketClientSpotApi">
            <summary>
            Aster Spot streams
            </summary>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterSocketClientSpotApi.SubscribeToAggregatedTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterAggregatedTradeUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to aggregated trade updates
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#collection-transaction-flow" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterSocketClientSpotApi.SubscribeToAggregatedTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterAggregatedTradeUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to aggregated trade updates
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#collection-transaction-flow" /></para>
            </summary>
            <param name="symbols">Symbols</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterSocketClientSpotApi.SubscribeToKlineUpdatesAsync(System.String,Aster.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterKlineUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to kline/candlestick updates
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#k-line-streams" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="interval">Interval for the klines</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterSocketClientSpotApi.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},Aster.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterKlineUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to kline/candlestick updates
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#k-line-streams" /></para>
            </summary>
            <param name="symbols">The symbols</param>
            <param name="interval">Interval for the klines</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterSocketClientSpotApi.SubscribeToKlineUpdatesAsync(System.String,System.Collections.Generic.IEnumerable{Aster.Net.Enums.KlineInterval},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterKlineUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to kline/candlestick updates
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#k-line-streams" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="intervals">Intervals for the klines</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterSocketClientSpotApi.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Aster.Net.Enums.KlineInterval},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterKlineUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to kline/candlestick updates
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#k-line-streams" /></para>
            </summary>
            <param name="symbols">The symbols</param>
            <param name="intervals">Intervals for the klines</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterSocketClientSpotApi.SubscribeToMiniTickerUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterMiniTickUpdate[]}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to mini price ticker updates for all symbols
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#simplified-ticker-by-symbol" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterSocketClientSpotApi.SubscribeToMiniTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterMiniTickUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to mini price ticker updates
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#simplified-ticker-by-symbol" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterSocketClientSpotApi.SubscribeToMiniTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterMiniTickUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to mini price ticker updates
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#simplified-ticker-by-symbol" /></para>
            </summary>
            <param name="symbols">Symbols</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterSocketClientSpotApi.SubscribeToTickerUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterTickerUpdate[]}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to price ticker updates for all symbols
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#full-ticker-per-symbol" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterSocketClientSpotApi.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to price ticker updates
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#full-ticker-per-symbol" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterSocketClientSpotApi.SubscribeToTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to price ticker updates
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#full-ticker-per-symbol" /></para>
            </summary>
            <param name="symbols">Symbols</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterSocketClientSpotApi.SubscribeToBookTickerUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterBookTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to book ticker updates for all symbols
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#best-order-book-information-by-symbol" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterSocketClientSpotApi.SubscribeToBookTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterBookTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to book ticker updates
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#best-order-book-information-by-symbol" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterSocketClientSpotApi.SubscribeToBookTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterBookTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to book ticker updates
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#best-order-book-information-by-symbol" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterSocketClientSpotApi.SubscribeToPartialOrderBookUpdatesAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterOrderBookUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to snapshot order book updates for the top x rows
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#limited-depth-information" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="levels">Number of rows, 5, 10 or 20</param>
            <param name="updateInterval">Update interval in milliseconds, either 100 or 1000</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterSocketClientSpotApi.SubscribeToPartialOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterOrderBookUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to snapshot order book updates for the top x rows
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#limited-depth-information" /></para>
            </summary>
            <param name="symbols">Symbols</param>
            <param name="levels">Number of rows, 5, 10 or 20</param>
            <param name="updateInterval">Update interval in milliseconds, either 100 or 1000</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterSocketClientSpotApi.SubscribeToOrderBookUpdatesAsync(System.String,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterOrderBookUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to order book difference updates
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#incremental-depth-information" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="updateInterval">Update interval in milliseconds, either 100 or 1000</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterSocketClientSpotApi.SubscribeToOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterOrderBookUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to order book difference updates
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#incremental-depth-information" /></para>
            </summary>
            <param name="symbols">Symbols</param>
            <param name="updateInterval">Update interval in milliseconds, either 100 or 1000</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterSocketClientSpotApi.SubscribeToUserDataUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterSpotAccountUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterSpotOrderUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the account update stream. Prior to using this, the <see cref="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiAccount.StartUserStreamAsync(System.Threading.CancellationToken)">restClient.SpotApi.Account.StartUserStreamAsync</see> method should be called to start the stream and obtaining a listen key.
            <para><a href="https://github.com/asterdex/api-docs/blob/master/aster-finance-spot-api.md#payload-account_update" /></para>
            </summary>
            <param name="listenKey">Listen key retrieved by the <see cref="M:Aster.Net.Interfaces.Clients.SpotApi.IAsterRestClientSpotApiAccount.StartUserStreamAsync(System.Threading.CancellationToken)">restClient.SpotApi.Account.StartUserStreamAsync</see> method</param>
            <param name="onAccountUpdate">The event handler for whenever an account update is received</param>
            <param name="onOrderUpdate">The event handler for whenever an order status update is received</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="P:Aster.Net.Interfaces.Clients.SpotApi.IAsterSocketClientSpotApi.SharedClient">
            <summary>
            Get the shared socket requests client. This interface is shared with other exchanges to allow for a common implementation for different exchanges.
            </summary>
        </member>
        <member name="T:Aster.Net.Interfaces.Clients.SpotApi.IAsterSocketClientSpotApiShared">
            <summary>
            Shared interface for Spot socket API usage
            </summary>
        </member>
        <member name="T:Aster.Net.Interfaces.IAsterOrderBookFactory">
            <summary>
            Aster local order book factory
            </summary>
        </member>
        <member name="P:Aster.Net.Interfaces.IAsterOrderBookFactory.Futures">
            <summary>
            Futures order book factory methods
            </summary>
        </member>
        <member name="M:Aster.Net.Interfaces.IAsterOrderBookFactory.Create(CryptoExchange.Net.SharedApis.SharedSymbol,System.Action{Aster.Net.Objects.Options.AsterOrderBookOptions})">
            <summary>
            Create a SymbolOrderBook for the symbol
            </summary>
            <param name="symbol">The symbol</param>
            <param name="options">Book options</param>
            <returns></returns>
        </member>
        <member name="M:Aster.Net.Interfaces.IAsterOrderBookFactory.CreateFutures(System.String,System.Action{Aster.Net.Objects.Options.AsterOrderBookOptions})">
            <summary>
            Create a new Futures local order book instance
            </summary>
        </member>
        <member name="T:Aster.Net.Interfaces.IAsterTrackerFactory">
            <summary>
            Tracker factory
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.AsterApiAddresses">
            <summary>
            Api addresses
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterApiAddresses.FuturesRestClientAddress">
            <summary>
            The address used by the AsterRestClient for the Futures API
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterApiAddresses.FuturesSocketClientAddress">
            <summary>
            The address used by the AsterSocketClient for the Futures websocket API
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterApiAddresses.SpotRestClientAddress">
            <summary>
            The address used by the AsterRestClient for the Spot API
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterApiAddresses.SpotSocketClientAddress">
            <summary>
            The address used by the AsterSocketClient for the Spot websocket API
            </summary>
        </member>
        <member name="F:Aster.Net.Objects.AsterApiAddresses.Default">
            <summary>
            The default addresses to connect to the Aster API
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Internal.AsterCombinedStream`1.Stream">
            <summary>
            The stream combined
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Internal.AsterCombinedStream`1.Data">
            <summary>
            The data of stream
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterAccountInfo">
            <summary>
            Account info
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountInfo.FeeTier">
            <summary>
            Fee tier
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountInfo.CanTrade">
            <summary>
            Can trade
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountInfo.CanDeposit">
            <summary>
            Can deposit
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountInfo.CanWithdraw">
            <summary>
            Can withdraw
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountInfo.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountInfo.TotalInitialMargin">
            <summary>
            Total initial margin
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountInfo.TotalMaintenanceMargin">
            <summary>
            Total maintenance margin
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountInfo.TotalWalletBalance">
            <summary>
            Total wallet balance
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountInfo.TotalUnrealizedProfit">
            <summary>
            Total unrealized profit
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountInfo.TotalMarginBalance">
            <summary>
            Total margin balance
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountInfo.TotalPositionInitialMargin">
            <summary>
            Total position initial margin
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountInfo.TotalOpenOrderInitialMargin">
            <summary>
            Total open order initial margin
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountInfo.TotalCrossWalletBalance">
            <summary>
            Total cross wallet balance
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountInfo.TotalCrossUnrealizedPnl">
            <summary>
            Total cross unrealized profit and loss
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountInfo.AvailableBalance">
            <summary>
            Available balance
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountInfo.MaxWithdrawQuantity">
            <summary>
            Max withdraw quantity
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountInfo.Assets">
            <summary>
            Assets
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountInfo.Positions">
            <summary>
            Positions
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterAccountInfoAsset">
            <summary>
            Asset information
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountInfoAsset.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountInfoAsset.WalletBalance">
            <summary>
            Wallet balance
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountInfoAsset.UnrealizedProfit">
            <summary>
            Unrealized profit
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountInfoAsset.MarginBalance">
            <summary>
            Margin balance
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountInfoAsset.MaintenanceMargin">
            <summary>
            Maintenance margin
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountInfoAsset.InitialMargin">
            <summary>
            Initial margin
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountInfoAsset.PositionInitialMargin">
            <summary>
            Position initial margin
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountInfoAsset.OpenOrderInitialMargin">
            <summary>
            Open order initial margin
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountInfoAsset.CrossWalletBalance">
            <summary>
            Cross wallet balance
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountInfoAsset.CrossUnrealizedPnl">
            <summary>
            Cross unrealized profit and loss
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountInfoAsset.AvailableBalance">
            <summary>
            Available balance
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountInfoAsset.MaxWithdrawQuantity">
            <summary>
            Max withdraw quantity
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountInfoAsset.MarginAvailable">
            <summary>
            Whether asset can be used as margin in multi asset margin mode
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountInfoAsset.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterAccountUpdate">
            <summary>
            Account update
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountUpdate.UpdateData">
            <summary>
            The update data
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountUpdate.TransactionTime">
            <summary>
            Transaction time
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountUpdate.ListenKey">
            <summary>
            The listen key the update was for
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterAccountUpdateData">
            <summary>
            Account update data
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountUpdateData.Reason">
            <summary>
            Account update reason type
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountUpdateData.Balances">
            <summary>
            Balances
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAccountUpdateData.Positions">
            <summary>
            Positions
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterBalanceUpdate">
            <summary>
            Information about an asset balance
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterBalanceUpdate.Asset">
            <summary>
            The asset this balance is for
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterBalanceUpdate.WalletBalance">
            <summary>
            The quantity that isn't locked in a trade
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterBalanceUpdate.CrossWalletBalance">
            <summary>
            The quantity that is locked in a trade
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterBalanceUpdate.BalanceChange">
            <summary>
            The balance change except PnL and commission
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterPositionUpdate">
            <summary>
            Information about an asset position
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterPositionUpdate.Symbol">
            <summary>
            The symbol this balance is for
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterPositionUpdate.Quantity">
            <summary>
            The quantity of the position
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterPositionUpdate.EntryPrice">
            <summary>
            The entry price
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterPositionUpdate.BreakEvenPrice">
            <summary>
            The break even price
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterPositionUpdate.RealizedPnl">
            <summary>
            The accumulated realized PnL
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterPositionUpdate.UnrealizedPnl">
            <summary>
            The Unrealized PnL
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterPositionUpdate.MarginType">
            <summary>
            The margin type
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterPositionUpdate.IsolatedMargin">
            <summary>
            The isolated wallet (if isolated position)
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterPositionUpdate.PositionSide">
            <summary>
            Position Side
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterAggregatedTradeUpdate">
            <summary>
            Aggregated trade update
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAggregatedTradeUpdate.Symbol">
            <summary>
            The symbol the trade was for
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAggregatedTradeUpdate.Id">
            <summary>
            The id of this aggregated trade
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAggregatedTradeUpdate.Price">
            <summary>
            The price of the trades
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAggregatedTradeUpdate.Quantity">
            <summary>
            The combined quantity of the trades
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAggregatedTradeUpdate.FirstTradeId">
            <summary>
            The first trade id in this aggregation
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAggregatedTradeUpdate.LastTradeId">
            <summary>
            The last trade id in this aggregation
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAggregatedTradeUpdate.TradeTime">
            <summary>
            The time of the trades
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAggregatedTradeUpdate.BuyerIsMaker">
            <summary>
            Whether the buyer was the maker
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterAggregateTrade">
            <summary>
            Aggregated trades
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAggregateTrade.Id">
            <summary>
            The id of this aggregation
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAggregateTrade.Price">
            <summary>
            The price of trades in this aggregation
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAggregateTrade.Quantity">
            <summary>
            The total quantity of trades in the aggregation
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAggregateTrade.FirstTradeId">
            <summary>
            The first trade id in this aggregation
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAggregateTrade.LastTradeId">
            <summary>
            The last trade id in this aggregation
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAggregateTrade.TradeTime">
            <summary>
            The timestamp of the trades
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAggregateTrade.BuyerIsMaker">
            <summary>
            Whether the buyer was the maker
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterAsset">
            <summary>
            Asset info
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAsset.Asset">
            <summary>
            Name of the asset
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAsset.MarginAvailable">
            <summary>
            Whether the asset can be used as margin in Multi-Assets mode
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAsset.AutoAssetExchange">
            <summary>
            Auto-exchange threshold in Multi-Assets margin mode
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterBalance">
            <summary>
            Asset balance
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterBalance.AccountAlias">
            <summary>
            Account alias
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterBalance.Asset">
            <summary>
            The asset this balance is for
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterBalance.WalletBalance">
            <summary>
            The total balance of this asset
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterBalance.CrossWalletBalance">
            <summary>
            Crossed wallet balance
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterBalance.CrossUnrealizedPnl">
            <summary>
            Unrealized profit of crossed positions
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterBalance.AvailableBalance">
            <summary>
            Available balance
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterBalance.MaxWithdrawQuantity">
            <summary>
            Maximum quantity for transfer out
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterBalance.MarginAvailable">
            <summary>
            Whether the asset can be used as margin in Multi-Assets mode
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterBalance.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterBookTicker">
            <summary>
            Book ticker
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterBookTicker.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterBookTicker.BestBidPrice">
            <summary>
            Best bid price
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterBookTicker.BestBidQuantity">
            <summary>
            Best bid quantity
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterBookTicker.BestAskPrice">
            <summary>
            Best ask price
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterBookTicker.BestAskQuantity">
            <summary>
            Best ask quantity
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterBookTicker.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterBookTickerUpdate">
            <summary>
            Book ticker update
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterBookTickerUpdate.UpdateId">
            <summary>
            Update id
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterBookTickerUpdate.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterBookTickerUpdate.BestBidPrice">
            <summary>
            Price of the best bid
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterBookTickerUpdate.BestBidQuantity">
            <summary>
            Quantity of the best bid
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterBookTickerUpdate.BestAskPrice">
            <summary>
            Price of the best ask
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterBookTickerUpdate.BestAskQuantity">
            <summary>
            Quantity of the best ask
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterBookTickerUpdate.TransactionTime">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterConfigUpdate">
            <summary>
            Config update
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterConfigUpdate.LeverageUpdateData">
            <summary>
            Leverage Update data
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterConfigUpdate.ConfigUpdateData">
            <summary>
            Position mode Update data
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterConfigUpdate.TransactionTime">
            <summary>
            Transaction time
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterConfigUpdate.ListenKey">
            <summary>
            The listen key the update was for
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterLeverageUpdateData">
            <summary>
            Config update data
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterLeverageUpdateData.Symbol">
            <summary>
            The symbol this balance is for
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterLeverageUpdateData.Leverage">
            <summary>
            The symbol this leverage is for
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterConfigUpdateData">
            <summary>
            Position mode update data
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterConfigUpdateData.MultiAssetMode">
            <summary>
            Multi-Assets Mode
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterCountDownResult">
            <summary>
            Count down set result
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterCountDownResult.Symbol">
            <summary>
            Symbol name
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterCountDownResult.CountdownTimer">
            <summary>
            Count down timer in seconds
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterExchangeInfo">
            <summary>
            Exchange info
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterExchangeInfo.TimeZone">
            <summary>
            The timezone the server uses
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterExchangeInfo.ServerTime">
            <summary>
            The current server time
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterExchangeInfo.RateLimits">
            <summary>
            The rate limits used
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterExchangeInfo.ExchangeFilters">
            <summary>
            Filters
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterExchangeInfo.Symbols">
            <summary>
            All symbols supported
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterExchangeInfo.Assets">
            <summary>
            All assets
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterFundingInfo">
            <summary>
            Funding configuration
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterFundingInfo.Symbol">
            <summary>
            The symbol the information is about
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterFundingInfo.FundingFeeCap">
            <summary>
            Funding rate cap
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterFundingInfo.FundingFeeFloor">
            <summary>
            Funding rate floor
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterFundingInfo.FundingIntervalHours">
            <summary>
            Funding interval in hours
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterFundingInfo.Timestamp">
            <summary>
            Time
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterFundingInfo.InterestRate">
            <summary>
            Interest rate
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterFundingRateHistory">
            <summary>
            Funding rate history
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterFundingRateHistory.Symbol">
            <summary>
            The symbol the information is about
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterFundingRateHistory.FundingRate">
            <summary>
            The finding rate for the given symbol and time
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterFundingRateHistory.FundingTime">
            <summary>
            The time the funding rate is applied
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterIncome">
            <summary>
            Income history record
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterIncome.Symbol">
            <summary>
            Symbol name
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterIncome.Asset">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterIncome.Type">
            <summary>
            Income type
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterIncome.Info">
            <summary>
            Info
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterIncome.Income">
            <summary>
            Income
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterIncome.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterIncome.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterIncome.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterKline">
            <summary>
            Kline/candlestick data
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterKline.OpenTime">
            <summary>
            The time this candlestick opened
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterKline.OpenPrice">
            <summary>
            The price at which this candlestick opened
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterKline.HighPrice">
            <summary>
            The highest price in this candlestick
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterKline.LowPrice">
            <summary>
            The lowest price in this candlestick
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterKline.ClosePrice">
            <summary>
            The price at which this candlestick closed
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterKline.Volume">
            <summary>
            The volume traded during this candlestick
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterKline.CloseTime">
            <summary>
            The close time of this candlestick
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterKline.QuoteVolume">
            <summary>
            The volume traded during this candlestick in the asset form
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterKline.TradeCount">
            <summary>
            The amount of trades in this candlestick
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterKline.TakerBuyBaseVolume">
            <summary>
            Taker buy volume in base asset
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterKline.TakerBuyQuoteVolume">
            <summary>
            Taker buy volume in quote asset
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterKlineUpdate">
            <summary>
            Aster kline update
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterKlineUpdate.Symbol">
            <summary>
            The symbol the data is for
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterKlineUpdate.Data">
            <summary>
            The data
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterKlineUpdateData">
            <summary>
            The kline data
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterKlineUpdateData.OpenTime">
            <summary>
            The open time of this candlestick
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterKlineUpdateData.Volume">
            <inheritdoc />
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterKlineUpdateData.CloseTime">
            <summary>
            The close time of this candlestick
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterKlineUpdateData.QuoteVolume">
            <inheritdoc />
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterKlineUpdateData.Symbol">
            <summary>
            The symbol this candlestick is for
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterKlineUpdateData.Interval">
            <summary>
            The interval of this candlestick
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterKlineUpdateData.FirstTrade">
            <summary>
            The first trade id in this candlestick
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterKlineUpdateData.LastTrade">
            <summary>
            The last trade id in this candlestick
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterKlineUpdateData.OpenPrice">
            <summary>
            The open price of this candlestick
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterKlineUpdateData.ClosePrice">
            <summary>
            The close price of this candlestick
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterKlineUpdateData.HighPrice">
            <summary>
            The highest price of this candlestick
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterKlineUpdateData.LowPrice">
            <summary>
            The lowest price of this candlestick
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterKlineUpdateData.TradeCount">
            <summary>
            The amount of trades in this candlestick
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterKlineUpdateData.TakerBuyBaseVolume">
            <inheritdoc />
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterKlineUpdateData.TakerBuyQuoteVolume">
            <inheritdoc />
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterKlineUpdateData.Final">
            <summary>
            Boolean indicating whether this candlestick is closed
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterLeverage">
            <summary>
            Leverage info
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterLeverage.Symbol">
            <summary>
            Symbol name
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterLeverage.MaxNotionalValue">
            <summary>
            Max notional value
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterLeverage.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterLiquidationUpdate">
            <summary>
            Liquidation update
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterLiquidationUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterLiquidationUpdate.Side">
            <summary>
            Liquidation Sided
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterLiquidationUpdate.Type">
            <summary>
            Liquidation order type
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterLiquidationUpdate.TimeInForce">
            <summary>
            Liquidation Time in Force
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterLiquidationUpdate.Quantity">
            <summary>
            Liquidation Original Quantity
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterLiquidationUpdate.Price">
            <summary>
            Liquidation order price
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterLiquidationUpdate.AveragePrice">
            <summary>
            Liquidation Average Price
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterLiquidationUpdate.Status">
            <summary>
            Liquidation Order Status
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterLiquidationUpdate.LastQuantityFilled">
            <summary>
            Liquidation Last Filled Quantity
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterLiquidationUpdate.QuantityFilled">
            <summary>
            Liquidation Accumulated fill quantity
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterLiquidationUpdate.Timestamp">
            <summary>
            Liquidation Trade Time
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterMarginChange">
            <summary>
            Position margin change record
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMarginChange.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMarginChange.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMarginChange.Quantity">
            <summary>
            Quantity change
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMarginChange.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMarginChange.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMarginChange.Side">
            <summary>
            Adjust type
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterMarginUpdate">
            <summary>
            Margin call update
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMarginUpdate.CrossWalletBalance">
            <summary>
            Cross Wallet Balance. Only pushed with crossed position margin call
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMarginUpdate.Positions">
            <summary>
            Positions
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMarginUpdate.ListenKey">
            <summary>
            The listen key the update was for
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterMarginPosition">
            <summary>
            Position info
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMarginPosition.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMarginPosition.PositionSide">
            <summary>
            Position Side
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMarginPosition.PositionQuantity">
            <summary>
            Position quantity
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMarginPosition.MarginType">
            <summary>
            Margin type
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMarginPosition.IsolatedWallet">
            <summary>
            Isolated Wallet (if isolated position)
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMarginPosition.MarkPrice">
            <summary>
            Mark Price
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMarginPosition.UnrealizedPnl">
            <summary>
            Unrealized PnL
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMarginPosition.MaintenanceMargin">
            <summary>
            Maintenance Margin Required
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterMarkPrice">
            <summary>
            Mark price info
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMarkPrice.Symbol">
            <summary>
            The symbol the information is about
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMarkPrice.MarkPrice">
            <summary>
            The current market price
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMarkPrice.IndexPrice">
            <summary>
            The current index price
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMarkPrice.FundingRate">
            <summary>
            The last funding rate
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMarkPrice.NextFundingTime">
            <summary>
            The time the funding rate is applied
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMarkPrice.EstimatedSettlePrice">
            <summary>
            Estimated settle price
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMarkPrice.InterestRate">
            <summary>
            Interest rate
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMarkPrice.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterMarkPriceUpdate">
            <summary>
            Mark price update
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMarkPriceUpdate.Symbol">
            <summary>
            The symbol the information is about
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMarkPriceUpdate.MarkPrice">
            <summary>
            The current market price
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMarkPriceUpdate.IndexPrice">
            <summary>
            The current index price
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMarkPriceUpdate.FundingRate">
            <summary>
            The last funding rate
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMarkPriceUpdate.NextFundingTime">
            <summary>
            The time the funding rate is applied
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMarkPriceUpdate.EstimatedSettlePrice">
            <summary>
            Estimated settle price
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterMiniTickUpdate">
            <summary>
            Mini price ticker update
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMiniTickUpdate.Symbol">
            <summary>
            The symbol this data is for
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMiniTickUpdate.LastPrice">
            <summary>
            The current day close price. This is the latest price for this symbol.
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMiniTickUpdate.OpenPrice">
            <summary>
            Todays open price
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMiniTickUpdate.HighPrice">
            <summary>
            Todays high price
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMiniTickUpdate.LowPrice">
            <summary>
            Todays low price
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMiniTickUpdate.Volume">
            <summary>
            Total traded volume
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMiniTickUpdate.QuoteVolume">
            <summary>
            Total traded quote volume
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterMultiAssetMode">
            <summary>
            Multi asset mode config
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterMultiAssetMode.MultiAssetMode">
            <summary>
            Multi asset mode enabled
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterOrder">
            <summary>
            Order info
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrder.Symbol">
            <summary>
            The symbol the order is for
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrder.Id">
            <summary>
            The order id as assigned by Binance
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrder.ClientOrderId">
            <summary>
            The order id as assigned by the client
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrder.IsLiquidationOrder">
            <summary>
            Whether or not this order is a liquidation order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrder.IsAdlAutoCloseOrder">
            <summary>
            Whether or not this order is an ADL auto close order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrder.IsSettlementOrder">
            <summary>
            Whether or not this order is a delisting/delivery settlement order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrder.Price">
            <summary>
            The price of the order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrder.AveragePrice">
            <summary>
            The average price of the order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrder.QuantityFilled">
            <summary>
            Quantity that has been filled
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrder.CumulativeQuantity">
            <summary>
            Cumulative quantity
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrder.QuoteQuantityFilled">
            <summary>
            Cumulative quantity in quote asset
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrder.Quantity">
            <summary>
            The original quantity of the order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrder.ReduceOnly">
            <summary>
            Reduce Only
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrder.ClosePosition">
            <summary>
            If order is for closing a position
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrder.Side">
            <summary>
            The side of the order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrder.Status">
            <summary>
            The current status of the order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrder.StopPrice">
            <summary>
            Stop price for the order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrder.TimeInForce">
            <summary>
            For what time the order lasts
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrder.Type">
            <summary>
            The type of the order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrder.OriginalType">
            <summary>
            The type of the order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrder.ActivatePrice">
            <summary>
            Activation price, only return with TRAILING_STOP_MARKET order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrder.CallbackRate">
            <summary>
            Callback rate, only return with TRAILING_STOP_MARKET order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrder.UpdateTime">
            <summary>
            The time the order was updated
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrder.CreateTime">
            <summary>
            The time the order was created
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrder.WorkingType">
            <summary>
            The working type
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrder.PositionSide">
            <summary>
            The position side of the order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrder.PriceProtect">
            <summary>
            Price protect
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterOrderBook">
            <summary>
            The order book for a asset
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderBook.Symbol">
            <summary>
            The symbol of the order book 
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderBook.LastUpdateId">
            <summary>
            The ID of the last update
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderBook.Bids">
            <summary>
            The list of bids
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderBook.Asks">
            <summary>
            The list of asks
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderBook.MessageTime">
            <summary>
            The symbol of the order book 
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderBook.TransactionTime">
            <summary>
            The ID of the last update
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterOrderBookEntry">
            <summary>
            An entry in the order book
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderBookEntry.Price">
            <summary>
            The price of this order book entry
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderBookEntry.Quantity">
            <summary>
            The quantity of this price in the order book
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterOrderBookUpdate">
            <summary>
            Order book update
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderBookUpdate.Symbol">
            <summary>
            The symbol of the order book
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderBookUpdate.TransactionTime">
            <summary>
            The time the event happened
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderBookUpdate.FirstUpdateId">
            <summary>
            The ID of the first update
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderBookUpdate.LastUpdateId">
            <summary>
            The ID of the last update
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderBookUpdate.LastUpdateIdStream">
            <summary>
            The ID of the last update Id in last stream
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderBookUpdate.Bids">
            <summary>
            The list of bids
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderBookUpdate.Asks">
            <summary>
            The list of asks
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterOrderRequest">
            <summary>
            Order request
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderRequest.Symbol">
            <summary>
            Symbol name
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderRequest.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderRequest.Type">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderRequest.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderRequest.TimeInForce">
            <summary>
            Time in force
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderRequest.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderRequest.Price">
            <summary>
            Limit price
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderRequest.ReduceOnly">
            <summary>
            Reduce-only
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderRequest.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderRequest.StopPrice">
            <summary>
            Stop price
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderRequest.ActivationPrice">
            <summary>
            Activation price
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderRequest.CallbackRate">
            <summary>
            Callback rate
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderRequest.WorkingType">
            <summary>
            Working type
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderRequest.PriceProtect">
            <summary>
            Price protect
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterOrderResult">
            <summary>
            Order result
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderResult.Code">
            <summary>
            Code
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderResult.Message">
            <summary>
            Message
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterOrderUpdate">
            <summary>
            Order update
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderUpdate.UpdateData">
            <summary>
            Update data
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderUpdate.TransactionTime">
            <summary>
            Transaction time
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderUpdate.ListenKey">
            <summary>
            The listen key the update was for
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterOrderUpdateData">
            <summary>
            Update data about an order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderUpdateData.Symbol">
            <summary>
            The symbol the order is for
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderUpdateData.ClientOrderId">
            <summary>
            The new client order id
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderUpdateData.Side">
            <summary>
            The side of the order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderUpdateData.Type">
            <summary>
            The type of the order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderUpdateData.TimeInForce">
            <summary>
            The timespan the order is active
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderUpdateData.Quantity">
            <summary>
            The quantity of the order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderUpdateData.Price">
            <summary>
            The price of the order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderUpdateData.AveragePrice">
            <summary>
            The average price of the order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderUpdateData.StopPrice">
            <summary>
            The stop price of the order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderUpdateData.ExecutionType">
            <summary>
            The execution type
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderUpdateData.Status">
            <summary>
            The status of the order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderUpdateData.OrderId">
            <summary>
            The id of the order as assigned by Binance
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderUpdateData.QuantityOfLastFilledTrade">
            <summary>
            The quantity of the last filled trade of this order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderUpdateData.AccumulatedQuantityOfFilledTrades">
            <summary>
            The quantity of all trades that were filled for this order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderUpdateData.PriceLastFilledTrade">
            <summary>
            The price of the last filled trade
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderUpdateData.Fee">
            <summary>
            The fee paid
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderUpdateData.FeeAsset">
            <summary>
            The asset the fee was taken from
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderUpdateData.UpdateTime">
            <summary>
            The time of the update
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderUpdateData.TradeId">
            <summary>
            The trade id
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderUpdateData.BidNotional">
            <summary>
            Bid Notional
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderUpdateData.AskNotional">
            <summary>
            Ask Notional
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderUpdateData.BuyerIsMaker">
            <summary>
            Whether the buyer is the maker
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderUpdateData.IsReduce">
            <summary>
            Is this reduce only
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderUpdateData.StopPriceWorking">
            <summary>
            Stop price working type
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderUpdateData.OriginalType">
            <summary>
            Original Order Type
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderUpdateData.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderUpdateData.IsClosePositionOrder">
            <summary>
            If Close-All, only pushed with conditional order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderUpdateData.ActivationPrice">
            <summary>
            Activation Price, only pushed with TRAILING_STOP_MARKET order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderUpdateData.CallbackRate">
            <summary>
            Callback Rate, only pushed with TRAILING_STOP_MARKET order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterOrderUpdateData.RealizedProfit">
            <summary>
            Realized profit of the trade
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterPosition">
            <summary>
            Position info
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterPosition.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterPosition.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterPosition.PositionAmount">
            <summary>
            Position amount
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterPosition.UnrealizedProfit">
            <summary>
            Unrealized profit
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterPosition.Isolated">
            <summary>
            Is isolated margin
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterPosition.InitialMargin">
            <summary>
            Initial margin
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterPosition.MaintenanceMargin">
            <summary>
            Maintenance margin
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterPosition.PositionInitialMargin">
            <summary>
            Position initial margin
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterPosition.OpenOrderInitialMargin">
            <summary>
            Open order initial margin
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterPosition.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterPosition.AverageEntryPrice">
            <summary>
            Average entry price
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterPosition.LiquidationPrice">
            <summary>
            Liquidation price
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterPosition.IsolatedMargin">
            <summary>
            Isolated margin
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterPosition.MaxAvailableNotional">
            <summary>
            Maximum available notional with current leverage
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterPosition.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterPosition.MaxNotionalValue">
            <summary>
            Max notional value
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterPosition.MarginType">
            <summary>
            Margin type
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterPosition.IsAutoAddMargin">
            <summary>
            Is auto-add margin
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterPosition.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterPositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterPositionMode.DualPositionMode">
            <summary>
            True: Hedge mode, False: One-way mode
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterPrice">
            <summary>
            Price info
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterPrice.Symbol">
            <summary>
            The symbol the price is for
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterPrice.Price">
            <summary>
            The price of the symbol
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterPrice.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterQuantileEstimation">
            <summary>
            Symbol ADL quantile estimation
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterQuantileEstimation.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterQuantileEstimation.AdlQuantile">
            <summary>
            Quantile
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterAdlQuantile">
            <summary>
            ADL quantile
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAdlQuantile.Long">
            <summary>
            Long position
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAdlQuantile.Short">
            <summary>
            Short position
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAdlQuantile.Hedge">
            <summary>
            Hedge
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterAdlQuantile.Both">
            <summary>
            Hedge
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterRateLimit">
            <summary>
            Rate limit info
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterRateLimit.Interval">
            <summary>
            The interval the rate limit uses to count
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterRateLimit.Type">
            <summary>
            The type the rate limit applies to
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterRateLimit.IntervalNumber">
            <summary>
            The amount of calls the limit is
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterRateLimit.Limit">
            <summary>
            The amount of calls the limit is
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterRecentTrade">
            <summary>
            Recent trade
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterRecentTrade.Id">
            <summary>
            The id of the trade
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterRecentTrade.Price">
            <summary>
            The price of the trade
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterRecentTrade.BaseQuantity">
            <summary>
            Quantity in base asset
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterRecentTrade.QuoteQuantity">
            <summary>
            Quantity in quote asset
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterRecentTrade.TradeTime">
            <summary>
            The timestamp of the trade
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterRecentTrade.BuyerIsMaker">
            <summary>
            Whether the buyer is maker
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterSocketEvent">
            <summary>
            Socket update event
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSocketEvent.Event">
            <summary>
            The type of the event
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSocketEvent.EventTime">
            <summary>
            The time the event happened
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterSpotAccountInfo">
            <summary>
            Account info
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotAccountInfo.FeeTier">
            <summary>
            Fee tier
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotAccountInfo.CanTrade">
            <summary>
            Can trade
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotAccountInfo.CanDeposit">
            <summary>
            Can deposit
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotAccountInfo.CanBurnAsset">
            <summary>
            Can burn asset
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotAccountInfo.CanWithdraw">
            <summary>
            Can withdraw
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotAccountInfo.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotAccountInfo.Balances">
            <summary>
            Balances
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterSpotBalance">
            <summary>
            Asset information
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotBalance.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotBalance.Free">
            <summary>
            Free
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotBalance.Locked">
            <summary>
            Locked
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterSpotAccountUpdate">
            <summary>
            Account info update
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotAccountUpdate.ListenKey">
            <summary>
            Listen key
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotAccountUpdate.UpdateReason">
            <summary>
            Update reason
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotAccountUpdate.Timestamp">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotAccountUpdate.Balances">
            <summary>
            Balances
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterSpotBalanceUpdate">
            <summary>
            Asset information
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotBalanceUpdate.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotBalanceUpdate.Free">
            <summary>
            Free
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotBalanceUpdate.Locked">
            <summary>
            Locked
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterSpotExchangeInfo">
            <summary>
            Exchange info
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotExchangeInfo.TimeZone">
            <summary>
            The timezone the server uses
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotExchangeInfo.ServerTime">
            <summary>
            The current server time
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotExchangeInfo.RateLimits">
            <summary>
            The rate limits used
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotExchangeInfo.ExchangeFilters">
            <summary>
            Filters
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotExchangeInfo.Symbols">
            <summary>
            All symbols supported
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotExchangeInfo.Assets">
            <summary>
            All assets
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterSpotAsset">
            <summary>
            Spot Asset
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotAsset.Name">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterSpotOrder">
            <summary>
            Spot order info
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrder.Symbol">
            <summary>
            The symbol the order is for
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrder.Id">
            <summary>
            The order id
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrder.OriginalClientOrderId">
            <summary>
            Original order id
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrder.ClientOrderId">
            <summary>
            The order id as assigned by the client
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrder.Price">
            <summary>
            The price of the order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrder.Quantity">
            <summary>
            The original quantity of the order, as specified in the order parameters by the user
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrder.QuantityFilled">
            <summary>
            The currently executed quantity of the order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrder.QuoteQuantityFilled">
            <summary>
            The currently executed amount of quote asset. Amounts to Sum(quantity * price) of executed trades for this order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrder.QuoteQuantity">
            <summary>
            The original quote order quantity of the order, as specified in the order parameters by the user
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrder.Status">
            <summary>
            The status of the order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrder.TimeInForce">
            <summary>
            How long the order is active
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrder.Type">
            <summary>
            The type of the order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrder.OriginalType">
            <summary>
            The original type of the order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrder.Side">
            <summary>
            The side of the order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrder.StopPrice">
            <summary>
            The stop price
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrder.CreateTime">
            <summary>
            The time the order was submitted
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrder.UpdateTime">
            <summary>
            The time the order was last updated
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrder.AverageFillPrice">
            <summary>
            The average price the order was filled
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrder.QuantityRemaining">
            <summary>
            Quantity which is still open to be filled
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterSpotOrderUpdate">
            <summary>
            Spot order update
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrderUpdate.Id">
            <summary>
            The id of the order as assigned by Binance
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrderUpdate.Symbol">
            <summary>
            The symbol the order is for
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrderUpdate.ClientOrderId">
            <summary>
            The new client order id
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrderUpdate.Side">
            <summary>
            The side of the order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrderUpdate.Type">
            <summary>
            The type of the order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrderUpdate.OriginalType">
            <summary>
            The original type of the order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrderUpdate.TimeInForce">
            <summary>
            The timespan the order is active
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrderUpdate.Quantity">
            <summary>
            The quantity of the order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrderUpdate.Price">
            <summary>
            The price of the order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrderUpdate.StopPrice">
            <summary>
            The stop price of the order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrderUpdate.ExecutionType">
            <summary>
            The execution type
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrderUpdate.Status">
            <summary>
            The status of the order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrderUpdate.LastQuantityFilled">
            <summary>
            The quantity of the last filled trade of this order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrderUpdate.QuantityFilled">
            <summary>
            The quantity of all trades that were filled for this order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrderUpdate.LastPriceFilled">
            <summary>
            The price of the last filled trade
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrderUpdate.Fee">
            <summary>
            The fee paid
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrderUpdate.FeeAsset">
            <summary>
            The asset the fee was taken from
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrderUpdate.UpdateTime">
            <summary>
            The time of the update
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrderUpdate.TradeId">
            <summary>
            The trade id
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrderUpdate.BuyerIsMaker">
            <summary>
            Whether the buyer is the maker
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrderUpdate.CreateTime">
            <summary>
            Time the order was created
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrderUpdate.QuoteQuantityFilled">
            <summary>
            Cumulative quantity
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrderUpdate.QuoteQuantity">
            <summary>
            Quote order quantity
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrderUpdate.LastQuoteQuantity">
            <summary>
            Last quote asset transacted quantity (i.e. LastPrice * LastQuantity)
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrderUpdate.AveragePrice">
            <summary>
            Average price
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotOrderUpdate.ListenKey">
            <summary>
            The listen key for which the update was
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterSpotRecentTrade">
            <summary>
            Recent trade
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotRecentTrade.Id">
            <summary>
            The id of the trade
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotRecentTrade.Price">
            <summary>
            The price of the trade
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotRecentTrade.BaseQuantity">
            <summary>
            Quantity in base asset
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotRecentTrade.TradeTime">
            <summary>
            The timestamp of the trade
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotRecentTrade.BuyerIsMaker">
            <summary>
            Whether the buyer is maker
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterSpotSymbol">
            <summary>
            Symbol info
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotSymbol.Filters">
            <summary>
            Filters for order on this symbol
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotSymbol.PricePrecision">
            <summary>
            The price Precision
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotSymbol.QuantityPrecision">
            <summary>
            The quantity precision
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotSymbol.BaseAsset">
            <summary>
            The base asset
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotSymbol.QuoteAsset">
            <summary>
            The quote asset
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotSymbol.BaseAssetPrecision">
            <summary>
            The precision of the base asset
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotSymbol.QuoteAssetPrecision">
            <summary>
            The precision of the quote asset
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotSymbol.OrderTypes">
            <summary>
            Allowed order types
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotSymbol.Name">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotSymbol.OcoAllowed">
            <summary>
            OCO order allowed
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotSymbol.TimeInForce">
            <summary>
            Allowed order time in force
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotSymbol.PriceFilter">
            <summary>
            Filter for the max accuracy of the price for this symbol
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotSymbol.LotSizeFilter">
            <summary>
            Filter for max accuracy of the quantity for this symbol
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotSymbol.MarketLotSizeFilter">
            <summary>
            Filter for max accuracy of the quantity for this symbol, specifically for market orders
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotSymbol.MaxOrdersFilter">
            <summary>
            Filter for max number of orders for this symbol
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotSymbol.MaxAlgoOrdersFilter">
            <summary>
            Filter for max number of orders for this symbol
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotSymbol.PricePercentFilter">
            <summary>
            Filter for the maximum deviation of the price
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotSymbol.MinNotionalFilter">
            <summary>
            Filter for the min notional value
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotSymbol.MaxNotionalFilter">
            <summary>
            Filter for the max notional value
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotSymbol.Status">
            <summary>
            The status of the symbol
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterSpotTicker">
            <summary>
            Price ticker info
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotTicker.BestBidPrice">
            <summary>
            The current best bid price
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotTicker.BestBidQuantity">
            <summary>
            The current best bid quantity
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotTicker.BestAskPrice">
            <summary>
            The current best ask price
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotTicker.BestAskQuantity">
            <summary>
            The current best ask quantity
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterSpotUserTrade">
            <summary>
            User trade info
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotUserTrade.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotUserTrade.Buyer">
            <summary>
            Is buyer
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotUserTrade.Fee">
            <summary>
            Paid fee
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotUserTrade.FeeAsset">
            <summary>
            Asset the fee is paid in
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotUserTrade.Id">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotUserTrade.Maker">
            <summary>
            Is maker
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotUserTrade.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotUserTrade.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotUserTrade.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotUserTrade.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotUserTrade.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSpotUserTrade.QuoteQuantity">
            <summary>
            Quote quantity
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterSymbol">
            <summary>
            Symbol info
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSymbol.Filters">
            <summary>
            Filters for order on this symbol
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSymbol.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSymbol.MaintMarginPercent">
            <summary>
            The maintenance margin percent
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSymbol.PricePrecision">
            <summary>
            The price Precision
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSymbol.QuantityPrecision">
            <summary>
            The quantity precision
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSymbol.RequiredMarginPercent">
            <summary>
            The required margin percentage
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSymbol.BaseAsset">
            <summary>
            The base asset
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSymbol.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSymbol.QuoteAsset">
            <summary>
            The quote asset
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSymbol.BaseAssetPrecision">
            <summary>
            The precision of the base asset
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSymbol.QuoteAssetPrecision">
            <summary>
            The precision of the quote asset
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSymbol.OrderTypes">
            <summary>
            Allowed order types
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSymbol.Name">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSymbol.Pair">
            <summary>
            Pair
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSymbol.DeliveryDate">
            <summary>
            Delivery Date
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSymbol.ListingDate">
            <summary>
            Delivery Date
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSymbol.TriggerProtect">
            <summary>
            Trigger protect
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSymbol.UnderlyingType">
            <summary>
            Currently Empty
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSymbol.UnderlyingSubType">
            <summary>
            Sub types
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSymbol.LiquidationFee">
            <summary>
            Liquidation fee
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSymbol.MarketTakeBound">
            <summary>
            The max price difference rate (from mark price) a market order can make
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSymbol.TimeInForce">
            <summary>
            Allowed order time in force
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSymbol.PriceFilter">
            <summary>
            Filter for the max accuracy of the price for this symbol
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSymbol.LotSizeFilter">
            <summary>
            Filter for max accuracy of the quantity for this symbol
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSymbol.MarketLotSizeFilter">
            <summary>
            Filter for max accuracy of the quantity for this symbol, specifically for market orders
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSymbol.MaxOrdersFilter">
            <summary>
            Filter for max number of orders for this symbol
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSymbol.MaxAlgoOrdersFilter">
            <summary>
            Filter for max number of orders for this symbol
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSymbol.PricePercentFilter">
            <summary>
            Filter for the maximum deviation of the price
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSymbol.MinNotionalFilter">
            <summary>
            Filter for the maximum deviation of the price
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSymbol.Status">
            <summary>
            The status of the symbol
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSymbol.SettlePlan">
            <summary>
            The status of the symbol
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterSymbolBracket">
            <summary>
            Symbol leverage bracket
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSymbolBracket.Symbol">
            <summary>
            Symbol or pair
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterSymbolBracket.Brackets">
            <summary>
            Brackets
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AssetLeverageBracket">
            <summary>
            Leverage bracket
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AssetLeverageBracket.Bracket">
            <summary>
            Bracket
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AssetLeverageBracket.InitialLeverage">
            <summary>
            Max initial leverage for this bracket
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AssetLeverageBracket.Cap">
            <summary>
            Cap of this bracket
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AssetLeverageBracket.Floor">
            <summary>
            Floor of this bracket
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AssetLeverageBracket.MaintenanceMarginRatio">
            <summary>
            Maintenance ratio for this bracket
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AssetLeverageBracket.MaintAmount">
            <summary>
            Auxiliary number for quick calculation 
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterTicker">
            <summary>
            Price ticker info
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterTicker.Symbol">
            <summary>
            The symbol the price is for
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterTicker.PriceChange">
            <summary>
            The actual price change in the last 24 hours
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterTicker.PriceChangePercent">
            <summary>
            The price change in percentage in the last 24 hours
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterTicker.WeightedAveragePrice">
            <summary>
            The weighted average price in the last 24 hours
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterTicker.LastPrice">
            <summary>
            The most recent trade price
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterTicker.LastQuantity">
            <summary>
            The most recent trade quantity
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterTicker.OpenPrice">
            <summary>
            The open price 24 hours ago
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterTicker.HighPrice">
            <summary>
            The highest price in the last 24 hours
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterTicker.LowPrice">
            <summary>
            The lowest price in the last 24 hours
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterTicker.Volume">
            <summary>
            The base volume traded in the last 24 hours
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterTicker.QuoteVolume">
            <summary>
            The quote asset volume traded in the last 24 hours
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterTicker.OpenTime">
            <summary>
            Time at which this 24 hours opened
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterTicker.CloseTime">
            <summary>
            Time at which this 24 hours closed
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterTicker.FirstTradeId">
            <summary>
            The first trade ID in the last 24 hours
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterTicker.LastTradeId">
            <summary>
            The last trade ID in the last 24 hours
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterTicker.TotalTrades">
            <summary>
            The amount of trades made in the last 24 hours
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterTickerUpdate">
            <summary>
            Price ticker update
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterTickerUpdate.Symbol">
            <summary>
            The symbol this data is for
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterTickerUpdate.PriceChange">
            <summary>
            The price change of this symbol
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterTickerUpdate.PriceChangePercent">
            <summary>
            The price change percentage of this symbol
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterTickerUpdate.WeightedAveragePrice">
            <summary>
            The weighted average
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterTickerUpdate.PrevDayClosePrice">
            <summary>
            The close price of the previous day
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterTickerUpdate.LastPrice">
            <summary>
            The current day close price. This is the latest price for this symbol.
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterTickerUpdate.LastQuantity">
            <summary>
            The most recent trade quantity
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterTickerUpdate.OpenPrice">
            <summary>
            Todays open price
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterTickerUpdate.HighPrice">
            <summary>
            Todays high price
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterTickerUpdate.LowPrice">
            <summary>
            Todays low price
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterTickerUpdate.Volume">
            <summary>
            Total traded volume in the base asset
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterTickerUpdate.QuoteVolume">
            <summary>
            Total traded volume in the quote asset
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterTickerUpdate.FirstTradeId">
            <summary>
            The first trade id of today
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterTickerUpdate.LastTradeId">
            <summary>
            The last trade id of today
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterTickerUpdate.TotalTrades">
            <summary>
            The total trades of id
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterTickerUpdate.OpenTime">
            <summary>
            The open time of these stats
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterTickerUpdate.CloseTime">
            <summary>
            The close time of these stats
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterTransferResult">
            <summary>
            Transfer result
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterTransferResult.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterTransferResult.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterUserCommission">
            <summary>
            User fee rate
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterUserCommission.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterUserCommission.MakerRate">
            <summary>
            Maker fee rate
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterUserCommission.TakerRate">
            <summary>
            Taker fee rate
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterUserTrade">
            <summary>
            User trade info
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterUserTrade.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterUserTrade.Buyer">
            <summary>
            Is buyer
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterUserTrade.Fee">
            <summary>
            Paid fee
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterUserTrade.FeeAsset">
            <summary>
            Asset the fee is paid in
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterUserTrade.Id">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterUserTrade.Maker">
            <summary>
            Is maker
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterUserTrade.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterUserTrade.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterUserTrade.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterUserTrade.RealizedPnl">
            <summary>
            Realized pnl
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterUserTrade.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterUserTrade.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterUserTrade.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterUserTrade.QuoteQuantity">
            <summary>
            Quote quantity
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Models.AsterWithdrawFee">
            <summary>
            Withdraw fee
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterWithdrawFee.TokenPrice">
            <summary>
            Token price
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterWithdrawFee.GasCost">
            <summary>
            Gas cost
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Models.AsterWithdrawFee.GasUsdValue">
            <summary>
            USD gas value
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.AsterSymbolFilter">
            <summary>
            A filter for order placed on a symbol.
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterSymbolFilter.FilterType">
            <summary>
            The type of this filter
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.AsterSymbolPriceFilter">
            <summary>
            Price filter
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterSymbolPriceFilter.MinPrice">
            <summary>
            The minimal price the order can be for
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterSymbolPriceFilter.MaxPrice">
            <summary>
            The max price the order can be for
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterSymbolPriceFilter.TickSize">
            <summary>
            The tick size of the price. The price can not have more precision as this and can only be incremented in steps of this.
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.AsterSymbolPercentPriceFilter">
            <summary>
            Price percentage filter
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterSymbolPercentPriceFilter.MultiplierUp">
            <summary>
            The max factor the price can deviate up
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterSymbolPercentPriceFilter.MultiplierDown">
            <summary>
            The max factor the price can deviate down
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterSymbolPercentPriceFilter.MultiplierDecimal">
            <summary>
            The amount of minutes the average price of trades is calculated over. 0 means the last price is used
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterSymbolPercentPriceFilter.AveragePriceMinutes">
            <summary>
            The amount of minutes the average price of trades is calculated over. 0 means the last price is used
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.AsterSymbolPercentPriceBySideFilter">
            <summary>
            Price percentage filter
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterSymbolPercentPriceBySideFilter.BidMultiplierUp">
            <summary>
            The max factor the price can deviate up for buys
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterSymbolPercentPriceBySideFilter.AskMultiplierUp">
            <summary>
            The max factor the price can deviate up for sells
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterSymbolPercentPriceBySideFilter.BidMultiplierDown">
            <summary>
            The max factor the price can deviate down for buys
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterSymbolPercentPriceBySideFilter.AskMultiplierDown">
            <summary>
            The max factor the price can deviate down for sells
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterSymbolPercentPriceBySideFilter.AveragePriceMinutes">
            <summary>
            The amount of minutes the average price of trades is calculated over. 0 means the last price is used
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.AsterSymbolLotSizeFilter">
            <summary>
            Lot size filter
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterSymbolLotSizeFilter.MinQuantity">
            <summary>
            The minimal quantity of an order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterSymbolLotSizeFilter.MaxQuantity">
            <summary>
            The maximum quantity of an order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterSymbolLotSizeFilter.StepSize">
            <summary>
            The tick size of the quantity. The quantity can not have more precision as this and can only be incremented in steps of this.
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.AsterSymbolMarketLotSizeFilter">
            <summary>
            Market lot size filter
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterSymbolMarketLotSizeFilter.MinQuantity">
            <summary>
            The minimal quantity of an order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterSymbolMarketLotSizeFilter.MaxQuantity">
            <summary>
            The maximum quantity of an order
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterSymbolMarketLotSizeFilter.StepSize">
            <summary>
            The tick size of the quantity. The quantity can not have more precision as this and can only be incremented in steps of this.
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.AsterSymbolMinNotionalFilter">
            <summary>
            Min notional filter
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterSymbolMinNotionalFilter.MinNotional">
            <summary>
            The minimal total quote quantity of an order. This is calculated by Price * Quantity.
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterSymbolMinNotionalFilter.ApplyToMarketOrders">
            <summary>
            Whether or not this filter is applied to market orders. If so the average trade price is used.
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterSymbolMinNotionalFilter.AveragePriceMinutes">
            <summary>
            The amount of minutes the average price of trades is calculated over for market orders. 0 means the last price is used
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.AsterSymbolMaxNotionalFilter">
            <summary>
            Max notional filter
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterSymbolMaxNotionalFilter.MaxNotional">
            <summary>
            The max total quote quantity of an order. This is calculated by Price * Quantity.
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.AsterSymbolNotionalFilter">
            <summary>
            Notional filter
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterSymbolNotionalFilter.MinNotional">
            <summary>
            The minimal total quote quantity of an order. This is calculated by Price * Quantity.
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterSymbolNotionalFilter.MaxNotional">
            <summary>
            The maximum total quote quantity of an order, This is calculated by Price * Quantity
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterSymbolNotionalFilter.ApplyMinToMarketOrders">
            <summary>
            Whether or not the min notional filter is applied to market orders. If so the average trade price is used.
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterSymbolNotionalFilter.ApplyMaxToMarketOrders">
            <summary>
            Whether or not the max notional filter is applied to market orders. If so the average trade price is used.
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterSymbolNotionalFilter.AveragePriceMinutes">
            <summary>
            The amount of minutes the average price of trades is calculated over for market orders. 0 means the last price is used
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.AsterSymbolMaxOrdersFilter">
             <summary>
            Max orders filter
             </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterSymbolMaxOrdersFilter.MaxNumberOrders">
            <summary>
            The max number of orders for this symbol
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.AsterSymbolMaxAlgorithmicOrdersFilter">
            <summary>
            Max algo orders filter
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterSymbolMaxAlgorithmicOrdersFilter.MaxNumberAlgorithmicOrders">
            <summary>
            The max number of Algorithmic orders for this symbol
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.AsterSymbolIcebergPartsFilter">
            <summary>
            Max iceberg parts filter
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterSymbolIcebergPartsFilter.Limit">
            <summary>
            The max parts of an iceberg order for this symbol.
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.AsterSymbolMaxPositionFilter">
            <summary>
            Max position filter
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterSymbolMaxPositionFilter.MaxPosition">
            <summary>
            The MaxPosition filter defines the allowed maximum position an account can have on the base asset of a symbol.
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.AsterSymbolTrailingDeltaFilter">
            <summary>
            Trailing delta filter
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterSymbolTrailingDeltaFilter.MinTrailingAboveDelta">
            <summary>
            The MinTrailingAboveDelta filter defines the minimum amount in Basis Point or BIPS above the price to activate the order.
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterSymbolTrailingDeltaFilter.MaxTrailingAboveDelta">
            <summary>
            The MaxTrailingAboveDelta filter defines the maximum amount in Basis Point or BIPS above the price to activate the order.
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterSymbolTrailingDeltaFilter.MinTrailingBelowDelta">
            <summary>
            The MinTrailingBelowDelta filter defines the minimum amount in Basis Point or BIPS below the price to activate the order.
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterSymbolTrailingDeltaFilter.MaxTrailingBelowDelta">
            <summary>
            The MaxTrailingBelowDelta filter defines the minimum amount in Basis Point or BIPS below the price to activate the order.
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.AsterMaxNumberOfIcebergOrdersFilter">
            <summary>
            Max Iceberg Orders Filter
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterMaxNumberOfIcebergOrdersFilter.MaxNumIcebergOrders">
            <summary>
            Maximum number of iceberg orders for this symbol
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.AsterMaxNumberOfOrderAmendsFilter">
            <summary>
            Max Order Amends Filter
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterMaxNumberOfOrderAmendsFilter.MaxNumOrderAmends">
            <summary>
            Maximum number of order amends for a single order
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.AsterMaxNumberOfOrderListsFilter">
            <summary>
            Max Order Lists Filter
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.AsterMaxNumberOfOrderListsFilter.MaxNumOrderLists">
            <summary>
            Maximum number of open order lists
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Options.AsterOptions">
            <summary>
            Aster options
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Options.AsterOrderBookOptions">
            <summary>
            Options for the Aster SymbolOrderBook
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Options.AsterOrderBookOptions.Default">
            <summary>
            Default options for new clients
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Options.AsterOrderBookOptions.Limit">
            <summary>
            The top amount of results to keep in sync. If for example limit=10 is used, the order book will contain the 10 best bids and 10 best asks. Leaving this null will sync the full order book
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Options.AsterOrderBookOptions.InitialDataTimeout">
            <summary>
            After how much time we should consider the connection dropped if no data is received for this time after the initial subscriptions
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Options.AsterOrderBookOptions.UpdateInterval">
            <summary>
            Update interval in milliseconds, either 100 or 1000. Defaults to 1000
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Options.AsterRestOptions">
            <summary>
            Options for the AsterRestClient
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Options.AsterRestOptions.Default">
            <summary>
            Default options for new clients
            </summary>
        </member>
        <member name="M:Aster.Net.Objects.Options.AsterRestOptions.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Options.AsterRestOptions.ReceiveWindow">
            <summary>
            The default receive window for requests
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Options.AsterRestOptions.SpotOptions">
            <summary>
            Spot API options
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Options.AsterRestOptions.FuturesOptions">
            <summary>
            Futures API options
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Options.AsterSocketOptions">
            <summary>
            Options for the AsterSocketClient
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Options.AsterSocketOptions.Default">
            <summary>
            Default options for new clients
            </summary>
        </member>
        <member name="M:Aster.Net.Objects.Options.AsterSocketOptions.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Options.AsterSocketOptions.SpotOptions">
            <summary>
            Spot API options
            </summary>
        </member>
        <member name="P:Aster.Net.Objects.Options.AsterSocketOptions.FuturesOptions">
            <summary>
            Futures API options
            </summary>
        </member>
        <member name="T:Aster.Net.Objects.Sockets.AsterSpotUserDataSubscription">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Objects.Sockets.AsterSpotUserDataSubscription.#ctor(Microsoft.Extensions.Logging.ILogger,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterSpotOrderUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterSpotAccountUpdate}})">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:Aster.Net.Objects.Sockets.AsterSpotUserDataSubscription.GetSubQuery(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Objects.Sockets.AsterSpotUserDataSubscription.GetUnsubQuery(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="T:Aster.Net.Objects.Sockets.Subscriptions.AsterSubscription`1">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Objects.Sockets.Subscriptions.AsterSubscription`1.#ctor(Microsoft.Extensions.Logging.ILogger,System.Collections.Generic.List{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{`0}},System.Boolean)">
            <summary>
            ctor
            </summary>
            <param name="logger"></param>
            <param name="topics"></param>
            <param name="handler"></param>
            <param name="auth"></param>
        </member>
        <member name="M:Aster.Net.Objects.Sockets.Subscriptions.AsterSubscription`1.GetSubQuery(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Objects.Sockets.Subscriptions.AsterSubscription`1.GetUnsubQuery(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Objects.Sockets.Subscriptions.AsterSubscription`1.DoHandleMessage(CryptoExchange.Net.Sockets.SocketConnection,CryptoExchange.Net.Objects.Sockets.DataEvent{`0})">
            <inheritdoc />
        </member>
        <member name="T:Aster.Net.Objects.Sockets.AsterUserDataSubscription">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Objects.Sockets.AsterUserDataSubscription.#ctor(Microsoft.Extensions.Logging.ILogger,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterOrderUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterConfigUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterMarginUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterAccountUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Aster.Net.Objects.Models.AsterSocketEvent}})">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:Aster.Net.Objects.Sockets.AsterUserDataSubscription.GetSubQuery(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.Objects.Sockets.AsterUserDataSubscription.GetUnsubQuery(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="T:Aster.Net.SymbolOrderBooks.AsterFuturesSymbolOrderBook">
            <summary>
            Implementation for a synchronized order book. After calling Start the order book will sync itself and keep up to date with new data. It will automatically try to reconnect and resync in case of a lost/interrupted connection.
            Make sure to check the State property to see if the order book is synced.
            </summary>
        </member>
        <member name="M:Aster.Net.SymbolOrderBooks.AsterFuturesSymbolOrderBook.#ctor(System.String,System.Action{Aster.Net.Objects.Options.AsterOrderBookOptions})">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:Aster.Net.SymbolOrderBooks.AsterFuturesSymbolOrderBook.#ctor(System.String,System.Action{Aster.Net.Objects.Options.AsterOrderBookOptions},Microsoft.Extensions.Logging.ILoggerFactory,Aster.Net.Interfaces.Clients.IAsterRestClient,Aster.Net.Interfaces.Clients.IAsterSocketClient)">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="optionsDelegate">Option configuration delegate</param>
            <param name="logger">Logger</param>
            <param name="restClient">Rest client instance</param>
            <param name="socketClient">Socket client instance</param>
        </member>
        <member name="M:Aster.Net.SymbolOrderBooks.AsterFuturesSymbolOrderBook.DoStartAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.SymbolOrderBooks.AsterFuturesSymbolOrderBook.DoReset">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.SymbolOrderBooks.AsterFuturesSymbolOrderBook.DoResyncAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.SymbolOrderBooks.AsterFuturesSymbolOrderBook.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:Aster.Net.SymbolOrderBooks.AsterOrderBookFactory">
            <summary>
            Aster order book factory
            </summary>
        </member>
        <member name="M:Aster.Net.SymbolOrderBooks.AsterOrderBookFactory.#ctor(System.IServiceProvider)">
            <summary>
            ctor
            </summary>
            <param name="serviceProvider">Service provider for resolving logging and clients</param>
        </member>
        <member name="P:Aster.Net.SymbolOrderBooks.AsterOrderBookFactory.Spot">
            <inheritdoc />
        </member>
        <member name="P:Aster.Net.SymbolOrderBooks.AsterOrderBookFactory.Futures">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.SymbolOrderBooks.AsterOrderBookFactory.Create(CryptoExchange.Net.SharedApis.SharedSymbol,System.Action{Aster.Net.Objects.Options.AsterOrderBookOptions})">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.SymbolOrderBooks.AsterOrderBookFactory.CreateSpot(System.String,System.Action{Aster.Net.Objects.Options.AsterOrderBookOptions})">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.SymbolOrderBooks.AsterOrderBookFactory.CreateFutures(System.String,System.Action{Aster.Net.Objects.Options.AsterOrderBookOptions})">
            <inheritdoc />
        </member>
        <member name="T:Aster.Net.SymbolOrderBooks.AsterSpotSymbolOrderBook">
            <summary>
            Implementation for a synchronized order book. After calling Start the order book will sync itself and keep up to date with new data. It will automatically try to reconnect and resync in case of a lost/interrupted connection.
            Make sure to check the State property to see if the order book is synced.
            </summary>
        </member>
        <member name="M:Aster.Net.SymbolOrderBooks.AsterSpotSymbolOrderBook.#ctor(System.String,System.Action{Aster.Net.Objects.Options.AsterOrderBookOptions})">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:Aster.Net.SymbolOrderBooks.AsterSpotSymbolOrderBook.#ctor(System.String,System.Action{Aster.Net.Objects.Options.AsterOrderBookOptions},Microsoft.Extensions.Logging.ILoggerFactory,Aster.Net.Interfaces.Clients.IAsterRestClient,Aster.Net.Interfaces.Clients.IAsterSocketClient)">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="optionsDelegate">Option configuration delegate</param>
            <param name="logger">Logger</param>
            <param name="restClient">Rest client instance</param>
            <param name="socketClient">Socket client instance</param>
        </member>
        <member name="M:Aster.Net.SymbolOrderBooks.AsterSpotSymbolOrderBook.DoStartAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.SymbolOrderBooks.AsterSpotSymbolOrderBook.DoReset">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.SymbolOrderBooks.AsterSpotSymbolOrderBook.DoResyncAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Aster.Net.SymbolOrderBooks.AsterSpotSymbolOrderBook.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:CryptoExchange.Net.Interfaces.CryptoClientExtensions">
            <summary>
            Extensions for the ICryptoRestClient and ICryptoSocketClient interfaces
            </summary>
        </member>
        <member name="M:CryptoExchange.Net.Interfaces.CryptoClientExtensions.Aster(CryptoExchange.Net.Interfaces.ICryptoRestClient)">
            <summary>
            Get the Aster REST Api client
            </summary>
            <param name="baseClient"></param>
            <returns></returns>
        </member>
        <member name="M:CryptoExchange.Net.Interfaces.CryptoClientExtensions.Aster(CryptoExchange.Net.Interfaces.ICryptoSocketClient)">
            <summary>
            Get the Aster Websocket Api client
            </summary>
            <param name="baseClient"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions">
            <summary>
            Extensions for DI
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddAster(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Add services such as the IAsterRestClient and IAsterSocketClient. Configures the services based on the provided configuration.
            </summary>
            <param name="services">The service collection</param>
            <param name="configuration">The configuration(section) containing the options</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddAster(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Aster.Net.Objects.Options.AsterOptions})">
            <summary>
            Add services such as the IAsterRestClient and IAsterSocketClient. Services will be configured based on the provided options.
            </summary>
            <param name="services">The service collection</param>
            <param name="optionsDelegate">Set options for the Aster services</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.Binder.SourceGeneration.BindingExtensions.Bind_AsterOptions(Microsoft.Extensions.Configuration.IConfiguration,System.Object)">
            <summary>Attempts to bind the given object instance to configuration values by matching property names against configuration keys recursively.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.Binder.SourceGeneration.BindingExtensions.ValidateConfigurationKeys(System.Type,System.Lazy{System.Collections.Generic.HashSet{System.String}},Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Configuration.BinderOptions)">
            <summary>If required by the binder options, validates that there are no unknown keys in the input configuration object.</summary>
        </member>
    </members>
</doc>
